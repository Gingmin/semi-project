-- 기존 테이블 삭제
DROP TABLE TBL_ATTACHMENT;
DROP TABLE TBL_ATTACHMENT_CATEGORY;
DROP TABLE TBL_REPORT_HISTORY;
DROP TABLE TBL_REPORT;
DROP TABLE TBL_REPORT_CATEGORY;
DROP TABLE TBL_TRAINER_LICENSE;
DROP TABLE TBL_LICENSE;
DROP TABLE TBL_CAREER;
DROP TABLE TBL_MEMBER_MODIFIED_HISTORY;
DROP TABLE TBL_TRAINER_INFO;
DROP TABLE TBL_PT_AMOUNT;
DROP TABLE TBL_MEMBER;

-- 기존 시퀀스 삭제
DROP SEQUENCE SEQ_MEMBER_NO;
DROP SEQUENCE SEQ_LICENSE_MANAGE_NO;
DROP SEQUENCE SEQ_REPORT_NO;
DROP SEQUENCE SEQ_CONSTRAINT_NO;
DROP SEQUENCE SEQ_ATTACHMENT_NO;

-- 기존 트리거 삭제
DROP TRIGGER MEMBER_HISTORY_TRIGGER;

-----------------------------------------------------------------

-- 시퀀스 생성
CREATE SEQUENCE SEQ_MEMBER_NO;
CREATE SEQUENCE SEQ_LICENSE_MANAGE_NO;
CREATE SEQUENCE SEQ_REPORT_NO;
CREATE SEQUENCE SEQ_CONSTRAINT_NO;
CREATE SEQUENCE SEQ_ATTACHMENT_NO;

-- 테이블 생성
-- MEMBER 테이블 생성
CREATE TABLE TBL_MEMBER(
  MEMBER_NO NUMBER PRIMARY KEY,
  EMAIL VARCHAR2(50) UNIQUE NOT NULL,
  MEMBER_PWD VARCHAR2(255) NOT NULL,
  MEMBER_NAME VARCHAR2(20) NOT NULL,
  PHONE VARCHAR2(20) UNIQUE NOT NULL,
  ENROLL_DATE DATE DEFAULT SYSDATE,
  MODIFIED_DATE DATE,
  BLACK_STATUS VARCHAR(2) DEFAULT 'N' CHECK(BLACK_STATUS IN ('Y', 'N')),
  MEMBER_ROLE VARCHAR2(15) DEFAULT 'MEMBER' CHECK(MEMBER_ROLE IN ('MEMBER', 'TRAINER', 'ADMIN')),
  MEMBER_STATUS VARCHAR2(2) DEFAULT 'Y' CHECK(MEMBER_STATUS IN ('Y', 'N'))
);
COMMENT ON TABLE TBL_MEMBER IS '회원';
COMMENT ON COLUMN TBL_MEMBER.MEMBER_NO IS '회원번호';
COMMENT ON COLUMN TBL_MEMBER.EMAIL IS '이메일';
COMMENT ON COLUMN TBL_MEMBER.MEMBER_PWD IS '비밀번호';
COMMENT ON COLUMN TBL_MEMBER.MEMBER_NAME IS '이름';
COMMENT ON COLUMN TBL_MEMBER.PHONE IS '전화번호';
COMMENT ON COLUMN TBL_MEMBER.ENROLL_DATE IS '가입일자';
COMMENT ON COLUMN TBL_MEMBER.MODIFIED_DATE IS '수정일자';
COMMENT ON COLUMN TBL_MEMBER.BLACK_STATUS IS '블랙여부';
COMMENT ON COLUMN TBL_MEMBER.MEMBER_ROLE IS '회원구분';
COMMENT ON COLUMN TBL_MEMBER.MEMBER_STATUS IS '회원상태';

-- 관리자 계정 추가
INSERT
  INTO TBL_MEMBER A
(
  A.MEMBER_NO
, A.EMAIL
, A.MEMBER_PWD
, A.MEMBER_NAME
, A.PHONE
, A.MEMBER_ROLE
)
VALUES
(
  SEQ_MEMBER_NO.NEXTVAL
, 'hellllopt@gmail.com'
, '$2a$10$7NqnZ0pUQh2RDLDkcEmubOSWB2DSewpDNs7q7xwxgZHHvMgZGJ.rW' --admin
, '관리자'
, '01012345678'
, 'ADMIN'
);
commit;

-- (PT)회차권잔여수량 테이블 생성
CREATE TABLE TBL_PT_AMOUNT(
  MEMBER_NO NUMBER PRIMARY KEY REFERENCES TBL_MEMBER(MEMBER_NO),
  PT_AMOUNT NUMBER DEFAULT 0
);
COMMENT ON TABLE TBL_PT_AMOUNT IS '회원별PT잔여수량';
COMMENT ON COLUMN TBL_PT_AMOUNT.MEMBER_NO IS '회원번호';
COMMENT ON COLUMN TBL_PT_AMOUNT.PT_AMOUNT IS 'PT잔여수량';

-- 트레이너추가정보 테이블 생성
CREATE TABLE TBL_TRAINER_INFO(
  MEMBER_NO NUMBER PRIMARY KEY REFERENCES TBL_MEMBER(MEMBER_NO),
  ACCOUNT_NUMBER VARCHAR2(50) NOT NULL,
  BANK_NAME VARCHAR2(30) NOT NULL,
  ACCOUNT_HOLDER VARCHAR2(40) NOT NULL,
  APPROVAL_STATUS VARCHAR2(2) NOT NULL,
  AVERAGE_SCORE NUMBER
);
COMMENT ON TABLE TBL_TRAINER_INFO IS '트레이너추가정보';
COMMENT ON COLUMN TBL_TRAINER_INFO.MEMBER_NO IS '트레이너번호';
COMMENT ON COLUMN TBL_TRAINER_INFO.ACCOUNT_NUMBER IS '계좌번호';
COMMENT ON COLUMN TBL_TRAINER_INFO.BANK_NAME IS '은행명';
COMMENT ON COLUMN TBL_TRAINER_INFO.ACCOUNT_HOLDER IS '예금주';
COMMENT ON COLUMN TBL_TRAINER_INFO.APPROVAL_STATUS IS '승인여붑';
COMMENT ON COLUMN TBL_TRAINER_INFO.AVERAGE_SCORE IS '누적평점';

-- 회원정보수정이력 테이블 생성
CREATE TABLE TBL_MEMBER_MODIFIED_HISTORY(
  MEMBER_NO NUMBER REFERENCES TBL_MEMBER(MEMBER_NO),
  MEMBER_PWD VARCHAR2(255) NOT NULL,
  PHONE VARCHAR2(20) NOT NULL,
  MEMBER_STATUS VARCHAR2(2) NOT NULL,
  MODIFIED_DATE DATE
);
COMMENT ON TABLE TBL_MEMBER_MODIFIED_HISTORY IS '회원정보수정이력';
COMMENT ON COLUMN TBL_MEMBER_MODIFIED_HISTORY.MEMBER_NO IS '회원번호';
COMMENT ON COLUMN TBL_MEMBER_MODIFIED_HISTORY.MEMBER_PWD IS '비밀번호';
COMMENT ON COLUMN TBL_MEMBER_MODIFIED_HISTORY.PHONE IS '전화번호';
COMMENT ON COLUMN TBL_MEMBER_MODIFIED_HISTORY.MODIFIED_DATE IS '수정일자';
COMMENT ON COLUMN TBL_MEMBER_MODIFIED_HISTORY.MEMBER_STATUS IS '회원상태';
-- 회원정보수정 히스토리를 위한 트리거 생성
CREATE OR REPLACE TRIGGER MEMBER_HISTORY_TRIGGER
  AFTER UPDATE
  ON TBL_MEMBER
  REFERENCING NEW AS NEW OLD AS OLD
  FOR EACH ROW
  BEGIN
    IF UPDATING
      THEN
        INSERT
          INTO TBL_MEMBER_MODIFIED_HISTORY
        (
          MEMBER_NO
        , MEMBER_PWD
        , PHONE
        , MEMBER_STATUS
        , MODIFIED_DATE
        )
        VALUES
        (
          NVL(:NEW.MEMBER_NO,:OLD.MEMBER_NO)
        , NVL(:NEW.MEMBER_PWD,:OLD.MEMBER_PWD)
        , NVL(:NEW.PHONE,:OLD.PHONE)
        , NVL(:NEW.MEMBER_STATUS,:OLD.MEMBER_STATUS)
        , NVL(:NEW.MODIFIED_DATE,:OLD.MODIFIED_DATE)
        );
    END IF;
END;
/

-- 트레이너별 경력 테이블 생성
CREATE TABLE TBL_CAREER(
  MEMBER_NO NUMBER PRIMARY KEY REFERENCES TBL_TRAINER_INFO(MEMBER_NO),
  PLACE_OF_WORK VARCHAR2(60) NOT NULL,
  START_DATE DATE NOT NULL,
  END_DATE DATE,
  EMPLOYMENT_STATUS VARCHAR2(2)NOT NULL
);
COMMENT ON TABLE TBL_CAREER IS '트레이너별 경력';
COMMENT ON COLUMN TBL_CAREER.MEMBER_NO IS '트레이너번호';
COMMENT ON COLUMN TBL_CAREER.PLACE_OF_WORK IS '근무처';
COMMENT ON COLUMN TBL_CAREER.START_DATE IS '근무시작일';
COMMENT ON COLUMN TBL_CAREER.END_DATE IS '근무종료일';
COMMENT ON COLUMN TBL_CAREER.EMPLOYMENT_STATUS IS '재직여부';

-- 자격증코드 테이블
CREATE TABLE TBL_LICENSE(
  LICENSE_CODE VARCHAR2(50) PRIMARY KEY,
  LICENSE_NAME VARCHAR2(40) NOT NULL,
  ISSUING_INSTITUTION VARCHAR2(40) NOT NULL,
  GRADE VARCHAR2(10) NOT NULL,
  ISSUE_DATE DATE NOT NULL,
  EXPIRATION_DATE DATE
);
COMMENT ON TABLE TBL_LICENSE IS '자격증코드';
COMMENT ON COLUMN TBL_LICENSE.LICENSE_CODE IS '자격증코드';
COMMENT ON COLUMN TBL_LICENSE.LICENSE_NAME IS '자격증이름';
COMMENT ON COLUMN TBL_LICENSE.ISSUING_INSTITUTION IS '발급기관';
COMMENT ON COLUMN TBL_LICENSE.GRADE IS '급수';
COMMENT ON COLUMN TBL_LICENSE.ISSUE_DATE IS '발급일자';
COMMENT ON COLUMN TBL_LICENSE.EXPIRATION_DATE IS '만료일자';

-- 트레이너별자격증 테이블
CREATE TABLE TBL_TRAINER_LICENSE(
  LICENSE_MANAGE_NO NUMBER PRIMARY KEY,
  MEMBER_NO NUMBER REFERENCES TBL_TRAINER_INFO(MEMBER_NO),
  LICENSE_CODE VARCHAR2(50) REFERENCES TBL_LICENSE(LICENSE_CODE)
);
COMMENT ON TABLE TBL_TRAINER_LICENSE IS '트레이너별 자격증';
COMMENT ON COLUMN TBL_TRAINER_LICENSE.LICENSE_MANAGE_NO IS '트레이너별자격증관리번호';
COMMENT ON COLUMN TBL_TRAINER_LICENSE.MEMBER_NO IS '트레이너번호';
COMMENT ON COLUMN TBL_TRAINER_LICENSE.LICENSE_CODE IS '자격증코드';

-- 첨부파일카테고리
CREATE TABLE TBL_ATTACHMENT_CATEGORY(
  ATTACHMENT_CODE VARCHAR2(20) PRIMARY KEY,
  ATTACHMENT_NAME VARCHAR2(40) UNIQUE NOT NULL
);
COMMENT ON TABLE TBL_ATTACHMENT_CATEGORY IS '첨부파일카테고리';
COMMENT ON COLUMN TBL_ATTACHMENT_CATEGORY.ATTACHMENT_CODE IS '첨부파일분류코드';
COMMENT ON COLUMN TBL_ATTACHMENT_CATEGORY.ATTACHMENT_NAME IS '첨부파일분류명';
-- 첨부파일 인서트
INSERT
  INTO TBL_ATTACHMENT_CATEGORY
(
  ATTACHMENT_CODE
, ATTACHMENT_NAME
)
VALUES
(
  'BD' --BOARD
, '게시글'
);
INSERT
  INTO TBL_ATTACHMENT_CATEGORY
(
  ATTACHMENT_CODE
, ATTACHMENT_NAME
)
VALUES
(
  'CI' --CLASS IMAGE
, '수업이미지'
);
INSERT
  INTO TBL_ATTACHMENT_CATEGORY
(
  ATTACHMENT_CODE
, ATTACHMENT_NAME
)
VALUES
(
  'RP' --REPORT
, '신고증거'
);
INSERT
  INTO TBL_ATTACHMENT_CATEGORY
(
  ATTACHMENT_CODE
, ATTACHMENT_NAME
)
VALUES
(
  'RC' --RECORD
, '녹화영상'
);
COMMIT;

-- 첨부파일 테이블
CREATE TABLE TBL_ATTACHMENT(
  ATTACHMENT_NO NUMBER PRIMARY KEY,
  ATTACHMENT_CODE REFERENCES TBL_ATTACHMENT_CATEGORY(ATTACHMENT_CODE),
  FILE_PATH VARCHAR2(300) NOT NULL,
  FILE_NAME VARCHAR2(80) NOT NULL,
  FILE_SIZE VARCHAR2(30) NOT NULL,
  FILE_FORMAT VARCHAR2(10) NOT NULL,
  UPLOAD_DATE DATE NOT NULL
);
COMMENT ON TABLE TBL_ATTACHMENT IS '첨부파일';
COMMENT ON COLUMN TBL_ATTACHMENT.ATTACHMENT_NO IS '첨부파일번호';
COMMENT ON COLUMN TBL_ATTACHMENT.ATTACHMENT_CODE IS '첨부파일분류코드';
COMMENT ON COLUMN TBL_ATTACHMENT.FILE_PATH IS '파일경로';
COMMENT ON COLUMN TBL_ATTACHMENT.FILE_NAME IS '첨부파일명';
COMMENT ON COLUMN TBL_ATTACHMENT.FILE_SIZE IS '파일사이즈';
COMMENT ON COLUMN TBL_ATTACHMENT.FILE_FORMAT IS '파일포맷';
COMMENT ON COLUMN TBL_ATTACHMENT.UPLOAD_DATE IS '업로드일시';

-- 신고유형카테고리 테이블
CREATE TABLE TBL_REPORT_CATEGORY(
  REPORT_CODE VARCHAR2(20) PRIMARY KEY,
  REPORT_TYPE VARCHAR2(30) UNIQUE NOT NULL
);
COMMENT ON TABLE TBL_REPORT_CATEGORY IS '신고유형카테고리';
COMMENT ON COLUMN TBL_REPORT_CATEGORY.REPORT_CODE IS '신고코드';
COMMENT ON COLUMN TBL_REPORT_CATEGORY.REPORT_TYPE IS '신고유형';

-- 신고유형카테고리 인서트
INSERT 
  INTO TBL_REPORT_CATEGORY
(
  REPORT_CODE
, REPORT_TYPE
)
VALUES
(
  'SW' -- SWEAR WORD
, '욕설'
);
INSERT 
  INTO TBL_REPORT_CATEGORY
(
  REPORT_CODE
, REPORT_TYPE
)
VALUES
(
  'GM' -- GAMBLING
, '사행성'
);
INSERT 
  INTO TBL_REPORT_CATEGORY
(
  REPORT_CODE
, REPORT_TYPE
)
VALUES
(
  'LA' -- LEWD ACT 
, '음란행위'
);
INSERT 
  INTO TBL_REPORT_CATEGORY
(
  REPORT_CODE
, REPORT_TYPE
)
VALUES
(
  'ETC'
, '기타'
);
COMMIT;

-- 신고내역 테이블
CREATE TABLE TBL_REPORT(
  REPORT_NO NUMBER PRIMARY KEY,
  REPORT_MEMBER_NO NUMBER REFERENCES TBL_MEMBER(MEMBER_NO),
  REPORTED_BY_MEMBER_NO NUMBER REFERENCES TBL_MEMBER(MEMBER_NO),
  REPORT_CODE VARCHAR2(20) REFERENCES TBL_REPORT_CATEGORY(REPORT_CODE),
  ATTACHMENT_NO NUMBER REFERENCES TBL_ATTACHMENT(ATTACHMENT_NO),
  REPORT_DATE DATE NOT NULL,
  REASON VARCHAR2(1000) NOT NULL
);
COMMENT ON TABLE TBL_REPORT IS '신고내역';
COMMENT ON COLUMN TBL_REPORT.REPORT_NO IS '신고내역번호';
COMMENT ON COLUMN TBL_REPORT.REPORT_MEMBER_NO IS '신고회원';
COMMENT ON COLUMN TBL_REPORT.REPORTED_BY_MEMBER_NO IS '피신고회원';
COMMENT ON COLUMN TBL_REPORT.REPORT_CODE IS '신고코드';
COMMENT ON COLUMN TBL_REPORT.ATTACHMENT_NO IS '첨부파일번호';
COMMENT ON COLUMN TBL_REPORT.REPORT_DATE IS '신고일자';
COMMENT ON COLUMN TBL_REPORT.REASON IS '신고관련근거';

-- 회원제재이력
CREATE TABLE TBL_REPORT_HISTORY(
  CONSTRAINT_NO NUMBER PRIMARY KEY,
  CONSTRAINT_MEMBER_NO NUMBER REFERENCES TBL_MEMBER(MEMBER_NO),
  CONSTRAINT_START_DATE DATE NOT NULL,
  CONSTRAINT_END_DATE DATE
);
COMMENT ON TABLE TBL_REPORT_HISTORY IS '회원제재이력';
COMMENT ON COLUMN TBL_REPORT_HISTORY.CONSTRAINT_NO IS '회원제재이력번호';
COMMENT ON COLUMN TBL_REPORT_HISTORY.CONSTRAINT_MEMBER_NO IS '제재대상회원';
COMMENT ON COLUMN TBL_REPORT_HISTORY.CONSTRAINT_START_DATE IS '제재시작일자';
COMMENT ON COLUMN TBL_REPORT_HISTORY.CONSTRAINT_END_DATE IS '제재종료일자';

-- 게시글 분류 테이블 생성

-- 게시글 테이블 생성

-- 게시글 댓글 테이블 생성

-- 공지사항 테이블 생성

-- 개설수업 테이블 생성

-- 실시간그룹수업내역 테이블 생성

-- 수업리뷰 테이블 생성

-- 그룹수업참여이력 테이블 생성

-- 회차권이용내역 테이블 생성

-- 실시간 그룹참여자 테이블 생성

-- 트레이너피티 승인 내역 테이블 생성

-- 상품분류 카테고리 테이블 생성

-- 멤버쉽 상품 테이블 생성

-- 회원별상품결제정보 테이블 생성

-- 매출 내역 테이블 생성

-- 결제 상태 변경 이력 테이블 생성

-- 환불내역 테이블 생성

-- 회원별멤버쉽상품구매이력 테이블 생성

-- 녹화영상관리내역 테이블 생성

-- 시청기록 테이블 생성

-- 녹화영상정산내역 테이블 생성
CREATE TABLE TBL_RECORD_VIDEO_RECEIPT(
  RECORD_VIDEO_RECEIPT_NO NUMBER PRIMARY KEY,
  VIDEO_NO NUMBER REFERENCES RECORD_VIDEO_MANAGE(VIDEO_NO),
  RECEIPT_NO NUMBER REFERENCES TBL_RECEIPT(RECEIPT_NO),
  TOTAL_PRICE_PER_VIDEO NUMBER
);
COMMENT ON TABLE TBL_RECORD_VIDEO_RECEIPT IS '녹화영상정산내역';
COMMENT ON COLUMN TBL_RECORD_VIDEO_RECEIPT.RECORD_VIDEO_RECEIPT_NO IS '녹화영상정산번호';
COMMENT ON COLUMN TBL_RECORD_VIDEO_RECEIPT.VIDEO_NO IS '영상번호';
COMMENT ON COLUMN TBL_RECORD_VIDEO_RECEIPT.RECEIPT_NO IS '정산내역번호';
COMMENT ON COLUMN TBL_RECORD_VIDEO_RECEIPT.TOTAL_PRICE_PER_VIDEO IS '영상별총금액';

-- 실시간수업정산내역 테이블 생성
CREATE TABLE TBL_REALTIME_CLASS_RECEIPT(
  REALTIME_CLASS_RECEIPT_NO NUMBER PRIMARY KEY,
  OPENED_CLASS_NO NUMBER REFERENCES REALTIME_GROUP_CLASS(OPENED_CLASS_NO),
  EDITION_NO NUMBER REFERENCES REALTIME_GROUP_CLASS(EDITION_NO),
  RECEIPT_NO NUMBER REFERENCES TBL_RECEIPT(RECEIPT_NO),
  TOTAL_PRICE_PER_EDITION NUMBER
);
COMMENT ON TABLE TBL_REALTIME_CLASS_RECEIPT IS '실시간수업정산내역';
COMMENT ON COLUMN TBL_REALTIME_CLASS_RECEIPT.REALTIME_CLASS_RECEIPT_NO IS '실시간수업정산번호';
COMMENT ON COLUMN TBL_REALTIME_CLASS_RECEIPT.OPENED_CLASS_NO IS '개설수업번호';
COMMENT ON COLUMN TBL_REALTIME_CLASS_RECEIPT.EDITION_NO IS '회차';
COMMENT ON COLUMN TBL_REALTIME_CLASS_RECEIPT.RECEIPT_NO IS '정산내역번호';
COMMENT ON COLUMN TBL_REALTIME_CLASS_RECEIPT.TOTAL_PRICE_PER_EDITION IS '회차별총금액';

-- 정산내역 테이블 생성
CREATE TABLE TBL_RECEIPT(
  RECEIPT_NO NUMBER PRIMARY KEY,
  TRAINER_NO NUMBER REFERENCES TBL_MEMBER(MEMBER_NO),
  RECEIPT_YEAR DATE NOT NULL,
  RECEIPT_MONTH DATE NOT NULL,
  RECEIPT_DAY DATE NOT NULL,
  RECEIPT_TAX NUMBER NOT NULL,
  TOTAL_VIDEO_PRICE NUMBER,
  TOTAL_EDITION_PRICE NUMBER
);
COMMENT ON TABLE TBL_RECEIPT IS '정산내역';
COMMENT ON COLUMN TBL_RECEIPT.RECEIPT_NO IS '정산내역번호';
COMMENT ON COLUMN TBL_RECEIPT.TRAINER_NO IS '트레이너번호';
COMMENT ON COLUMN TBL_RECEIPT.RECEIPT_YEAR IS '년';
COMMENT ON COLUMN TBL_RECEIPT.RECEIPT_MONTH IS '월';
COMMENT ON COLUMN TBL_RECEIPT.RECEIPT_DAY IS '일';
COMMENT ON COLUMN TBL_RECEIPT.RECEIPT_TAX IS '원청징수세금';
COMMENT ON COLUMN TBL_RECEIPT.TOTAL_VIDEO_PRICE IS '녹화영상정산금액';
COMMENT ON COLUMN TBL_RECEIPT.TOTAL_EDITION_PRICE IS '실시간수업정산금액';

-- 지급내역 테이블 생성
CREATE TABLE TBL_PAYMENT(
  PAYMENT_NO NUMBER PRIMARY KEY,
  RECEIPT_NO NUMBER REFERENCES TBL_RECEIPT_NO(RECEIPT_NO),
  PAYMENT_YEAR DATE NOT NULL,
  PAYMENT_MONTH DATE NOT NULL,
  PAYMENT_DAY DATE NOT NULL,
  PAYMENT_PRICE NUMBER NOT NULL
);
COMMENT ON TABLE TBL_PAYMENT IS '지급내역';
COMMENT ON COLUMN TBL_PAYMENT.PAYMENT_NO IS '지급내역번호';
COMMENT ON COLUMN TBL_PAYMENT.RECEIPT_NO IS '정산내역번호';
COMMENT ON COLUMN TBL_PAYMENT.PAYMENT_YEAR IS '년';
COMMENT ON COLUMN TBL_PAYMENT.PAYMENT_MONTH IS '월';
COMMENT ON COLUMN TBL_PAYMENT.PAYMENT_DAY IS '일';
COMMENT ON COLUMN TBL_PAYMENT.PAYMENT_PRICE IS '금액';

-- 통계테이블 생성

-- 자주묻는 질문 테이블 생성


