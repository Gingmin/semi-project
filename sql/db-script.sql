-- 기존 테이블 삭제
-- DROP만 드래그해서 두 번 돌려야 됨
-- 그 후에 F5
DROP TABLE TBL_VIDEO_ATTACHMENT;
DROP TABLE TBL_REVIEW_ATTACHMENT;
DROP TABLE TBL_CLASS_ATTACHMENT;
DROP TABLE TBL_NOTICE_ATTACHMENT;
DROP TABLE TBL_REPORT_ATTACHMENT;
DROP TABLE TBL_LICENSE_ATTACHMENT;
DROP TABLE TBL_STATISTICS;
DROP TABLE TBL_PAYMENT;
DROP TABLE TBL_RECEIPT;
DROP TABLE TBL_REALTIME_CLASS_RECEIPT;
DROP TABLE TBL_RECORD_VIDEO_RECEIPT;
DROP TABLE TBL_WATCH_VIDEO_RECORD;
DROP TABLE TBL_RECORD_VIDEO_MANAGE;
DROP TABLE TBL_PURCHASE_MEMBERSHIP;
DROP TABLE TBL_REFUND;
DROP TABLE TBL_PURCHASE_STATUS_CHANGE;
DROP TABLE TBL_SALES;
DROP TABLE TBL_PURCHASE_PRODUCT;
DROP TABLE TBL_MEMBERSHIP_PRODUCT;
DROP TABLE TBL_PRODUCT_SORT_CATEGORY;
DROP TABLE TBL_TRAINER_PT_PERMIT;
DROP TABLE TBL_REALTIME_GROUP_PARTICIPANT;
DROP TABLE TBL_VOUCHER_USE;
DROP TABLE TBL_GROUP_CLASS_PARTICIPATION;
DROP TABLE TBL_CLASS_REVIEW;
DROP TABLE TBL_REALTIME_GROUP_CLASS;
DROP TABLE TBL_OPENED_CLASS;
DROP TABLE TBL_NOTICE;
DROP TABLE TBL_NOTICE_COMMENT;
DROP TABLE TBL_POST_CLASSIFICATION;
DROP TABLE TBL_ATTACHMENT;
DROP TABLE TBL_ATTACHMENT_CATEGORY;
DROP TABLE TBL_REPORT_HISTORY;
DROP TABLE TBL_REPORT;
DROP TABLE TBL_REPORT_CATEGORY;
DROP TABLE TBL_TRAINER_LICENSE;
DROP TABLE TBL_LICENSE;
DROP TABLE TBL_CAREER;
DROP TABLE TBL_MEMBER_MODIFIED_HISTORY;
DROP TABLE TBL_TRAINER_INFO;
DROP TABLE TBL_PT_AMOUNT;
DROP TABLE TBL_MEMBER;

-- 기존 시퀀스 삭제
DROP SEQUENCE SEQ_MEMBER_NO;
DROP SEQUENCE SEQ_LICENSE_MANAGE_NO;
DROP SEQUENCE SEQ_REPORT_NO;
DROP SEQUENCE SEQ_CONSTRAINT_NO;
DROP SEQUENCE SEQ_VIDEO_ATTACHMENT_NO;
DROP SEQUENCE SEQ_NOTICE_NO;
DROP SEQUENCE SEQ_CLASS_NO;
DROP SEQUENCE SEQ_PERMIT_NO;
DROP SEQUENCE SEQ_PURCHASE_CODE;
DROP SEQUENCE SEQ_PURCHASE_STATUS_CHANGE_NO;
DROP SEQUENCE SEQ_REFUND_NO;
DROP SEQUENCE SEQ_PURCHASE_RECORD_NO;
DROP SEQUENCE SEQ_VIDEO_NO;
DROP SEQUENCE SEQ_RECORD_VIDEO_RECEIPT_NO;
DROP SEQUENCE SEQ_REALTIME_CLASS_RECEIPT_NO;
DROP SEQUENCE SEQ_RECEIPT_NO;
DROP SEQUENCE SEQ_RGC_MANAGE_NO;
DROP SEQUENCE SEQ_LICENSE_ATTACHMENT_NO;
DROP SEQUENCE SEQ_REPORT_ATTACHMENT_NO;
DROP SEQUENCE SEQ_NOTICE_ATTACHMENT_NO;
DROP SEQUENCE SEQ_CLASS_ATTACHMENT_NO;
DROP SEQUENCE SEQ_REVIEW_ATTACHMENT_NO;
DROP SEQUENCE SEQ_REVIEW_NO;

-- 기존 트리거 삭제
DROP TRIGGER MEMBER_HISTORY_TRIGGER;

-----------------------------------------------------------------

-- 시퀀스 생성
CREATE SEQUENCE SEQ_MEMBER_NO;
CREATE SEQUENCE SEQ_LICENSE_MANAGE_NO;
CREATE SEQUENCE SEQ_REPORT_NO;
CREATE SEQUENCE SEQ_CONSTRAINT_NO;
CREATE SEQUENCE SEQ_VIDEO_ATTACHMENT_NO;
CREATE SEQUENCE SEQ_NOTICE_NO;
CREATE SEQUENCE SEQ_CLASS_NO;
CREATE SEQUENCE SEQ_PERMIT_NO;
CREATE SEQUENCE SEQ_PURCHASE_CODE;
CREATE SEQUENCE SEQ_PURCHASE_STATUS_CHANGE_NO;
CREATE SEQUENCE SEQ_REFUND_NO;
CREATE SEQUENCE SEQ_PURCHASE_RECORD_NO;
CREATE SEQUENCE SEQ_VIDEO_NO;
CREATE SEQUENCE SEQ_RECORD_VIDEO_RECEIPT_NO;
CREATE SEQUENCE SEQ_REALTIME_CLASS_RECEIPT_NO;
CREATE SEQUENCE SEQ_RECEIPT_NO;
CREATE SEQUENCE SEQ_RGC_MANAGE_NO;
CREATE SEQUENCE SEQ_LICENSE_ATTACHMENT_NO;
CREATE SEQUENCE SEQ_REPORT_ATTACHMENT_NO;
CREATE SEQUENCE SEQ_NOTICE_ATTACHMENT_NO;
CREATE SEQUENCE SEQ_CLASS_ATTACHMENT_NO;
CREATE SEQUENCE SEQ_REVIEW_ATTACHMENT_NO;
CREATE SEQUENCE SEQ_REVIEW_NO;

-- 테이블 생성
-- MEMBER 테이블 생성
CREATE TABLE TBL_MEMBER(
  MEMBER_NO NUMBER PRIMARY KEY,
  EMAIL VARCHAR2(50) UNIQUE NOT NULL,
  MEMBER_PWD VARCHAR2(255) NOT NULL,
  MEMBER_NAME VARCHAR2(20) NOT NULL,
  PHONE VARCHAR2(20) UNIQUE NOT NULL,
  ENROLL_DATE DATE DEFAULT SYSDATE,
  MODIFIED_DATE DATE,
  BLACK_STATUS VARCHAR(2) DEFAULT 'N' CHECK(BLACK_STATUS IN ('Y', 'N')),
  MEMBER_ROLE VARCHAR2(15) DEFAULT 'MEMBER' CHECK(MEMBER_ROLE IN ('MEMBER', 'TRAINER', 'ADMIN')),
  MEMBER_STATUS VARCHAR2(2) DEFAULT 'Y' CHECK(MEMBER_STATUS IN ('Y', 'N'))
);
COMMENT ON TABLE TBL_MEMBER IS '회원';
COMMENT ON COLUMN TBL_MEMBER.MEMBER_NO IS '회원번호';
COMMENT ON COLUMN TBL_MEMBER.EMAIL IS '이메일';
COMMENT ON COLUMN TBL_MEMBER.MEMBER_PWD IS '비밀번호';
COMMENT ON COLUMN TBL_MEMBER.MEMBER_NAME IS '이름';
COMMENT ON COLUMN TBL_MEMBER.PHONE IS '전화번호';
COMMENT ON COLUMN TBL_MEMBER.ENROLL_DATE IS '가입일자';
COMMENT ON COLUMN TBL_MEMBER.MODIFIED_DATE IS '수정일자';
COMMENT ON COLUMN TBL_MEMBER.BLACK_STATUS IS '블랙여부';
COMMENT ON COLUMN TBL_MEMBER.MEMBER_ROLE IS '회원구분';
COMMENT ON COLUMN TBL_MEMBER.MEMBER_STATUS IS '회원상태';

-- 관리자 계정 추가
INSERT
  INTO TBL_MEMBER A
(
  A.MEMBER_NO
, A.EMAIL
, A.MEMBER_PWD
, A.MEMBER_NAME
, A.PHONE
, A.MEMBER_ROLE
)
VALUES
(
  SEQ_MEMBER_NO.NEXTVAL
, 'hellllopt@gmail.com'
, '$2a$10$7NqnZ0pUQh2RDLDkcEmubOSWB2DSewpDNs7q7xwxgZHHvMgZGJ.rW' --admin
, '관리자'
, '01012345678'
, 'ADMIN'
);
-- 테스트 회원 추가(아이디찾기 비번찾기 불가 계정)
INSERT
  INTO TBL_MEMBER A
(
  A.MEMBER_NO
, A.EMAIL
, A.MEMBER_PWD
, A.MEMBER_NAME
, A.PHONE
, A.MEMBER_ROLE
)
VALUES
(
  SEQ_MEMBER_NO.NEXTVAL
, 'jinho@gmail.com'
, '$2a$10$jcdZL/pcGCboHyA8A1yk/O8mBFJ3lyMFw8hqvZ/tMvRkMe8Ug9anu' -- hello1234
, '김진호'
, '01023456789'
, 'MEMBER'
);
INSERT
  INTO TBL_MEMBER A
(
  A.MEMBER_NO
, A.EMAIL
, A.MEMBER_PWD
, A.MEMBER_NAME
, A.PHONE
, A.MEMBER_ROLE
)
VALUES
(
  SEQ_MEMBER_NO.NEXTVAL
, 'taehun@gmail.com'
, '$2a$10$jcdZL/pcGCboHyA8A1yk/O8mBFJ3lyMFw8hqvZ/tMvRkMe8Ug9anu' -- hello1234
, '김태헌'
, '01034567890'
, 'MEMBER'
);
INSERT
  INTO TBL_MEMBER A
(
  A.MEMBER_NO
, A.EMAIL
, A.MEMBER_PWD
, A.MEMBER_NAME
, A.PHONE
, A.MEMBER_ROLE
)
VALUES
(
  SEQ_MEMBER_NO.NEXTVAL
, 'namgyu@gmail.com'
, '$2a$10$jcdZL/pcGCboHyA8A1yk/O8mBFJ3lyMFw8hqvZ/tMvRkMe8Ug9anu' -- hello1234
, '송남규'
, '01045678901'
, 'MEMBER'
);
INSERT
  INTO TBL_MEMBER A
(
  A.MEMBER_NO
, A.EMAIL
, A.MEMBER_PWD
, A.MEMBER_NAME
, A.PHONE
, A.MEMBER_ROLE
)
VALUES
(
  SEQ_MEMBER_NO.NEXTVAL
, 'namkyeong@gmail.com'
, '$2a$10$jcdZL/pcGCboHyA8A1yk/O8mBFJ3lyMFw8hqvZ/tMvRkMe8Ug9anu' -- hello1234
, '이남경'
, '01056789012'
, 'MEMBER'
);
INSERT
  INTO TBL_MEMBER A
(
  A.MEMBER_NO
, A.EMAIL
, A.MEMBER_PWD
, A.MEMBER_NAME
, A.PHONE
, A.MEMBER_ROLE
)
VALUES
(
  SEQ_MEMBER_NO.NEXTVAL
, 'yujin@gmail.com'
, '$2a$10$jcdZL/pcGCboHyA8A1yk/O8mBFJ3lyMFw8hqvZ/tMvRkMe8Ug9anu' -- hello1234
, '이유진'
, '01067890123'
, 'MEMBER'
);
INSERT
  INTO TBL_MEMBER A
(
  A.MEMBER_NO
, A.EMAIL
, A.MEMBER_PWD
, A.MEMBER_NAME
, A.PHONE
, A.MEMBER_ROLE
)
VALUES
(
  SEQ_MEMBER_NO.NEXTVAL
, 'wangyu@gmail.com'
, '$2a$10$jcdZL/pcGCboHyA8A1yk/O8mBFJ3lyMFw8hqvZ/tMvRkMe8Ug9anu' -- hello1234
, '임완규'
, '01078901232'
, 'MEMBER'
);
INSERT
  INTO TBL_MEMBER A
(
  A.MEMBER_NO
, A.EMAIL
, A.MEMBER_PWD
, A.MEMBER_NAME
, A.PHONE
, A.MEMBER_ROLE
)
VALUES
(
  SEQ_MEMBER_NO.NEXTVAL
, 'minseo@gmail.com'
, '$2a$10$jcdZL/pcGCboHyA8A1yk/O8mBFJ3lyMFw8hqvZ/tMvRkMe8Ug9anu' -- hello1234
, '정민서'
, '01089012345'
, 'MEMBER'
);
INSERT
  INTO TBL_MEMBER A
(
  A.MEMBER_NO
, A.EMAIL
, A.MEMBER_PWD
, A.MEMBER_NAME
, A.PHONE
, A.MEMBER_ROLE
)
VALUES
(
  SEQ_MEMBER_NO.NEXTVAL
, 'onejihun@gmail.com'
, '$2a$10$jcdZL/pcGCboHyA8A1yk/O8mBFJ3lyMFw8hqvZ/tMvRkMe8Ug9anu' -- hello1234
, '한지훈'
, '01090123456'
, 'MEMBER'
);
INSERT
  INTO TBL_MEMBER A
(
  A.MEMBER_NO
, A.EMAIL
, A.MEMBER_PWD
, A.MEMBER_NAME
, A.PHONE
, A.MEMBER_ROLE
)
VALUES
(
  SEQ_MEMBER_NO.NEXTVAL
, 'jihwan@gmail.com'
, '$2a$10$jcdZL/pcGCboHyA8A1yk/O8mBFJ3lyMFw8hqvZ/tMvRkMe8Ug9anu' -- hello1234
, '최지환'
, '01001234567'
, 'MEMBER'
);
INSERT
  INTO TBL_MEMBER A
(
  A.MEMBER_NO
, A.EMAIL
, A.MEMBER_PWD
, A.MEMBER_NAME
, A.PHONE
, A.MEMBER_ROLE
)
VALUES
(
  SEQ_MEMBER_NO.NEXTVAL
, 'huisang@gmail.com'
, '$2a$10$jcdZL/pcGCboHyA8A1yk/O8mBFJ3lyMFw8hqvZ/tMvRkMe8Ug9anu' -- hello1234
, '최희상'
, '01098765432'
, 'MEMBER'
);
INSERT
  INTO TBL_MEMBER A
(
  A.MEMBER_NO
, A.EMAIL
, A.MEMBER_PWD
, A.MEMBER_NAME
, A.PHONE
, A.MEMBER_ROLE
)
VALUES
(
  SEQ_MEMBER_NO.NEXTVAL
, 'twojihun@gmail.com'
, '$2a$10$jcdZL/pcGCboHyA8A1yk/O8mBFJ3lyMFw8hqvZ/tMvRkMe8Ug9anu' -- hello1234
, '추지훈'
, '01087654321'
, 'MEMBER'
);
INSERT
  INTO TBL_MEMBER A
(
  A.MEMBER_NO
, A.EMAIL
, A.MEMBER_PWD
, A.MEMBER_NAME
, A.PHONE
, A.MEMBER_ROLE
)
VALUES
(
  SEQ_MEMBER_NO.NEXTVAL
, 'mihwa@gmail.com'
, '$2a$10$jcdZL/pcGCboHyA8A1yk/O8mBFJ3lyMFw8hqvZ/tMvRkMe8Ug9anu' -- hello1234
, '한미화'
, '01076543210'
, 'MEMBER'
);
INSERT
  INTO TBL_MEMBER A
(
  A.MEMBER_NO
, A.EMAIL
, A.MEMBER_PWD
, A.MEMBER_NAME
, A.PHONE
, A.MEMBER_ROLE
)
VALUES
(
  SEQ_MEMBER_NO.NEXTVAL
, 'seungrok@gmail.com'
, '$2a$10$jcdZL/pcGCboHyA8A1yk/O8mBFJ3lyMFw8hqvZ/tMvRkMe8Ug9anu' -- hello1234
, '신승록'
, '01065432109'
, 'MEMBER'
);
INSERT
  INTO TBL_MEMBER A
(
  A.MEMBER_NO
, A.EMAIL
, A.MEMBER_PWD
, A.MEMBER_NAME
, A.PHONE
, A.MEMBER_ROLE
)
VALUES
(
  SEQ_MEMBER_NO.NEXTVAL
, 'minki@gmail.com'
, '$2a$10$jcdZL/pcGCboHyA8A1yk/O8mBFJ3lyMFw8hqvZ/tMvRkMe8Ug9anu' -- hello1234
, '김민기'
, '01054321987'
, 'MEMBER'
);
commit;

-- (PT)회차권잔여수량 테이블 생성
CREATE TABLE TBL_PT_AMOUNT(
  MEMBER_NO NUMBER PRIMARY KEY REFERENCES TBL_MEMBER(MEMBER_NO),
  PT_AMOUNT NUMBER DEFAULT 0,
  MEMBERSHIP_EXP_DATE DATE
);
COMMENT ON TABLE TBL_PT_AMOUNT IS '회원별PT잔여수량';
COMMENT ON COLUMN TBL_PT_AMOUNT.MEMBER_NO IS '회원번호';
COMMENT ON COLUMN TBL_PT_AMOUNT.PT_AMOUNT IS 'PT잔여수량';
COMMENT ON COLUMN TBL_PT_AMOUNT.MEMBERSHIP_EXP_DATE IS '멤버쉽만료날짜';
-- 인서트
INSERT INTO TBL_PT_AMOUNT
( MEMBER_NO, PT_AMOUNT, MEMBERSHIP_EXP_DATE )
VALUES
( 1, 100, TO_DATE('2022-02-22', 'YYYY-MM-DD'));
INSERT INTO TBL_PT_AMOUNT
( MEMBER_NO, PT_AMOUNT, MEMBERSHIP_EXP_DATE )
VALUES
( 2, 100, TO_DATE('2022-02-22', 'YYYY-MM-DD'));
INSERT INTO TBL_PT_AMOUNT
( MEMBER_NO, PT_AMOUNT, MEMBERSHIP_EXP_DATE )
VALUES
( 3, 100, TO_DATE('2022-02-22', 'YYYY-MM-DD'));
INSERT INTO TBL_PT_AMOUNT
( MEMBER_NO, PT_AMOUNT, MEMBERSHIP_EXP_DATE )
VALUES
( 4, 100, TO_DATE('2022-02-22', 'YYYY-MM-DD'));
INSERT INTO TBL_PT_AMOUNT
( MEMBER_NO, PT_AMOUNT, MEMBERSHIP_EXP_DATE )
VALUES
( 5, 100, TO_DATE('2022-02-22', 'YYYY-MM-DD'));
INSERT INTO TBL_PT_AMOUNT
( MEMBER_NO, PT_AMOUNT, MEMBERSHIP_EXP_DATE )
VALUES
( 6, 100, TO_DATE('2022-02-22', 'YYYY-MM-DD'));
INSERT INTO TBL_PT_AMOUNT
( MEMBER_NO, PT_AMOUNT, MEMBERSHIP_EXP_DATE )
VALUES
( 7, 100, TO_DATE('2022-02-22', 'YYYY-MM-DD'));
INSERT INTO TBL_PT_AMOUNT
( MEMBER_NO, PT_AMOUNT, MEMBERSHIP_EXP_DATE )
VALUES
( 8, 100, TO_DATE('2022-02-22', 'YYYY-MM-DD'));
INSERT INTO TBL_PT_AMOUNT
( MEMBER_NO, PT_AMOUNT, MEMBERSHIP_EXP_DATE )
VALUES
( 9, 100, TO_DATE('2022-02-22', 'YYYY-MM-DD'));
INSERT INTO TBL_PT_AMOUNT
( MEMBER_NO, PT_AMOUNT, MEMBERSHIP_EXP_DATE )
VALUES
( 10, 100, TO_DATE('2022-02-22', 'YYYY-MM-DD'));
INSERT INTO TBL_PT_AMOUNT
( MEMBER_NO, PT_AMOUNT, MEMBERSHIP_EXP_DATE )
VALUES
( 11, 100, TO_DATE('2022-02-22', 'YYYY-MM-DD'));
INSERT INTO TBL_PT_AMOUNT
( MEMBER_NO, PT_AMOUNT, MEMBERSHIP_EXP_DATE )
VALUES
( 12, 100, TO_DATE('2022-02-22', 'YYYY-MM-DD'));
INSERT INTO TBL_PT_AMOUNT
( MEMBER_NO, PT_AMOUNT, MEMBERSHIP_EXP_DATE )
VALUES
( 13, 100, TO_DATE('2022-02-22', 'YYYY-MM-DD'));
INSERT INTO TBL_PT_AMOUNT
( MEMBER_NO, PT_AMOUNT, MEMBERSHIP_EXP_DATE )
VALUES
( 14, 100, TO_DATE('2022-02-22', 'YYYY-MM-DD'));
INSERT INTO TBL_PT_AMOUNT
( MEMBER_NO, PT_AMOUNT, MEMBERSHIP_EXP_DATE )
VALUES
( 15, 100, TO_DATE('2022-02-22', 'YYYY-MM-DD'));
COMMIT;

-- 트레이너추가정보 테이블 생성
CREATE TABLE TBL_TRAINER_INFO(
  MEMBER_NO NUMBER PRIMARY KEY REFERENCES TBL_MEMBER(MEMBER_NO),
  ACCOUNT_NUMBER VARCHAR2(50) NOT NULL,
  BANK_NAME VARCHAR2(30) NOT NULL,
  ACCOUNT_HOLDER VARCHAR2(40) NOT NULL,
  APPROVAL_STATUS VARCHAR2(2) DEFAULT 'N' NOT NULL CHECK(APPROVAL_STATUS IN ('Y', 'N')),
  AVERAGE_SCORE NUMBER
);
COMMENT ON TABLE TBL_TRAINER_INFO IS '트레이너추가정보';
COMMENT ON COLUMN TBL_TRAINER_INFO.MEMBER_NO IS '트레이너번호';
COMMENT ON COLUMN TBL_TRAINER_INFO.ACCOUNT_NUMBER IS '계좌번호';
COMMENT ON COLUMN TBL_TRAINER_INFO.BANK_NAME IS '은행명';
COMMENT ON COLUMN TBL_TRAINER_INFO.ACCOUNT_HOLDER IS '예금주';
COMMENT ON COLUMN TBL_TRAINER_INFO.APPROVAL_STATUS IS '승인여붑';
COMMENT ON COLUMN TBL_TRAINER_INFO.AVERAGE_SCORE IS '누적평점';

-- 회원정보수정이력 테이블 생성
CREATE TABLE TBL_MEMBER_MODIFIED_HISTORY(
  MEMBER_NO NUMBER REFERENCES TBL_MEMBER(MEMBER_NO),
  MEMBER_PWD VARCHAR2(255) NOT NULL,
  PHONE VARCHAR2(20) NOT NULL,
  MEMBER_STATUS VARCHAR2(2) NOT NULL CHECK(MEMBER_STATUS IN ('Y', 'N')),
  MODIFIED_DATE DATE
);
COMMENT ON TABLE TBL_MEMBER_MODIFIED_HISTORY IS '회원정보수정이력';
COMMENT ON COLUMN TBL_MEMBER_MODIFIED_HISTORY.MEMBER_NO IS '회원번호';
COMMENT ON COLUMN TBL_MEMBER_MODIFIED_HISTORY.MEMBER_PWD IS '비밀번호';
COMMENT ON COLUMN TBL_MEMBER_MODIFIED_HISTORY.PHONE IS '전화번호';
COMMENT ON COLUMN TBL_MEMBER_MODIFIED_HISTORY.MODIFIED_DATE IS '수정일자';
COMMENT ON COLUMN TBL_MEMBER_MODIFIED_HISTORY.MEMBER_STATUS IS '회원상태';
-- 회원정보수정 히스토리를 위한 트리거 생성
CREATE OR REPLACE TRIGGER MEMBER_HISTORY_TRIGGER
  AFTER UPDATE
  ON TBL_MEMBER
  REFERENCING NEW AS NEW OLD AS OLD
  FOR EACH ROW
  BEGIN
    IF UPDATING
      THEN
        INSERT
          INTO TBL_MEMBER_MODIFIED_HISTORY
        (
          MEMBER_NO
        , MEMBER_PWD
        , PHONE
        , MEMBER_STATUS
        , MODIFIED_DATE
        )
        VALUES
        (
          NVL(:NEW.MEMBER_NO,:OLD.MEMBER_NO)
        , NVL(:NEW.MEMBER_PWD,:OLD.MEMBER_PWD)
        , NVL(:NEW.PHONE,:OLD.PHONE)
        , NVL(:NEW.MEMBER_STATUS,:OLD.MEMBER_STATUS)
        , NVL(:NEW.MODIFIED_DATE,:OLD.MODIFIED_DATE)
        );
    END IF;
END;
/

-- 트레이너별 경력 테이블 생성
CREATE TABLE TBL_CAREER(
  MEMBER_NO NUMBER PRIMARY KEY REFERENCES TBL_TRAINER_INFO(MEMBER_NO),
  PLACE_OF_WORK VARCHAR2(60) NOT NULL,
  START_DATE DATE NOT NULL,
  END_DATE DATE,
  EMPLOYMENT_STATUS VARCHAR2(2) NOT NULL CHECK(EMPLOYMENT_STATUS IN ('Y', 'N'))
);
COMMENT ON TABLE TBL_CAREER IS '트레이너별 경력';
COMMENT ON COLUMN TBL_CAREER.MEMBER_NO IS '트레이너번호';
COMMENT ON COLUMN TBL_CAREER.PLACE_OF_WORK IS '근무처';
COMMENT ON COLUMN TBL_CAREER.START_DATE IS '근무시작일';
COMMENT ON COLUMN TBL_CAREER.END_DATE IS '근무종료일';
COMMENT ON COLUMN TBL_CAREER.EMPLOYMENT_STATUS IS '재직여부';

-- 자격증코드 테이블
CREATE TABLE TBL_LICENSE(
  LICENSE_CODE VARCHAR2(50) PRIMARY KEY,
  LICENSE_NAME VARCHAR2(40) NOT NULL,
  ISSUING_INSTITUTION VARCHAR2(40) NOT NULL,
  GRADE VARCHAR2(10),
  ISSUE_DATE DATE NOT NULL,
  EXPIRATION_DATE DATE
);
COMMENT ON TABLE TBL_LICENSE IS '자격증코드';
COMMENT ON COLUMN TBL_LICENSE.LICENSE_CODE IS '자격증코드';
COMMENT ON COLUMN TBL_LICENSE.LICENSE_NAME IS '자격증이름';
COMMENT ON COLUMN TBL_LICENSE.ISSUING_INSTITUTION IS '발급기관';
COMMENT ON COLUMN TBL_LICENSE.GRADE IS '급수';
COMMENT ON COLUMN TBL_LICENSE.ISSUE_DATE IS '발급일자';
COMMENT ON COLUMN TBL_LICENSE.EXPIRATION_DATE IS '만료일자';

-- 트레이너별자격증 테이블
CREATE TABLE TBL_TRAINER_LICENSE(
  LICENSE_MANAGE_NO NUMBER PRIMARY KEY,
  MEMBER_NO NUMBER REFERENCES TBL_TRAINER_INFO(MEMBER_NO),
  LICENSE_CODE VARCHAR2(50) REFERENCES TBL_LICENSE(LICENSE_CODE)
);
COMMENT ON TABLE TBL_TRAINER_LICENSE IS '트레이너별 자격증';
COMMENT ON COLUMN TBL_TRAINER_LICENSE.LICENSE_MANAGE_NO IS '트레이너별자격증관리번호';
COMMENT ON COLUMN TBL_TRAINER_LICENSE.MEMBER_NO IS '트레이너번호';
COMMENT ON COLUMN TBL_TRAINER_LICENSE.LICENSE_CODE IS '자격증코드';

-- 자격증 첨부파일 테이블
CREATE TABLE TBL_LICENSE_ATTACHMENT(
  LICENSE_ATTACHMENT_NO NUMBER PRIMARY KEY,
  REF_LICENSE_CODE VARCHAR2(50) REFERENCES TBL_LICENSE(LICENSE_CODE),
  FILE_PATH VARCHAR2(300) NOT NULL,
  ORIGINAL_NAME VARCHAR2(255) NOT NULL,
  FILE_NAME VARCHAR2(80) NOT NULL,
  THUMBNAIL_PATH VARCHAR2(255),
  UPLOAD_DATE DATE NOT NULL,
  ATTACHMENT_STATUS VARCHAR2(2) DEFAULT 'Y' NOT NULL CHECK(ATTACHMENT_STATUS IN ('Y', 'N'))
);
COMMENT ON TABLE TBL_LICENSE_ATTACHMENT IS '자격증첨부파일';
COMMENT ON COLUMN TBL_LICENSE_ATTACHMENT.LICENSE_ATTACHMENT_NO IS '첨부파일번호';
COMMENT ON COLUMN TBL_LICENSE_ATTACHMENT.REF_LICENSE_CODE IS '자격증코드';
COMMENT ON COLUMN TBL_LICENSE_ATTACHMENT.FILE_PATH IS '파일경로';
COMMENT ON COLUMN TBL_LICENSE_ATTACHMENT.ORIGINAL_NAME IS '첨부파일명';
COMMENT ON COLUMN TBL_LICENSE_ATTACHMENT.FILE_NAME IS '변환된이름';
COMMENT ON COLUMN TBL_LICENSE_ATTACHMENT.UPLOAD_DATE IS '업로드일시';
COMMENT ON COLUMN TBL_LICENSE_ATTACHMENT.THUMBNAIL_PATH IS '썸네일경로';
COMMENT ON COLUMN TBL_LICENSE_ATTACHMENT.ATTACHMENT_STATUS IS '상태';

-- 신고유형카테고리 테이블
CREATE TABLE TBL_REPORT_CATEGORY(
  REPORT_CODE VARCHAR2(20) PRIMARY KEY,
  REPORT_TYPE VARCHAR2(30) UNIQUE NOT NULL
);
COMMENT ON TABLE TBL_REPORT_CATEGORY IS '신고유형카테고리';
COMMENT ON COLUMN TBL_REPORT_CATEGORY.REPORT_CODE IS '신고코드';
COMMENT ON COLUMN TBL_REPORT_CATEGORY.REPORT_TYPE IS '신고유형';

-- 신고유형카테고리 인서트
INSERT 
  INTO TBL_REPORT_CATEGORY
(
  REPORT_CODE
, REPORT_TYPE
)
VALUES
(
  'SW' -- SWEAR WORD
, '욕설'
);
INSERT 
  INTO TBL_REPORT_CATEGORY
(
  REPORT_CODE
, REPORT_TYPE
)
VALUES
(
  'GM' -- GAMBLING
, '사행성'
);
INSERT 
  INTO TBL_REPORT_CATEGORY
(
  REPORT_CODE
, REPORT_TYPE
)
VALUES
(
  'LA' -- LEWD ACT 
, '음란행위'
);
INSERT 
  INTO TBL_REPORT_CATEGORY
(
  REPORT_CODE
, REPORT_TYPE
)
VALUES
(
  'ETC'
, '기타'
);
COMMIT;

-- 신고내역 테이블
CREATE TABLE TBL_REPORT(
  REPORT_NO NUMBER PRIMARY KEY,
  REPORT_MEMBER_NO NUMBER REFERENCES TBL_MEMBER(MEMBER_NO),
  REPORTED_BY_MEMBER_NO VARCHAR2(20),
  REPORT_CODE VARCHAR2(20) REFERENCES TBL_REPORT_CATEGORY(REPORT_CODE),
  REPORT_DATE DATE NOT NULL,
  REASON VARCHAR2(1000) NOT NULL
);
COMMENT ON TABLE TBL_REPORT IS '신고내역';
COMMENT ON COLUMN TBL_REPORT.REPORT_NO IS '신고내역번호';
COMMENT ON COLUMN TBL_REPORT.REPORT_MEMBER_NO IS '신고회원';
COMMENT ON COLUMN TBL_REPORT.REPORTED_BY_MEMBER_NO IS '피신고회원';
COMMENT ON COLUMN TBL_REPORT.REPORT_CODE IS '신고코드';
COMMENT ON COLUMN TBL_REPORT.REPORT_DATE IS '신고일자';
COMMENT ON COLUMN TBL_REPORT.REASON IS '신고관련근거';
-- 인서트
INSERT INTO TBL_REPORT B( B.REPORT_NO, B.REPORT_MEMBER_NO, B.REPORT_CODE, B.REPORT_DATE, B.REASON)
VALUES(SEQ_REPORT_NO.NEXTVAL, 1, 'ETC', SYSDATE, 'NULL');
INSERT INTO TBL_REPORT B( B.REPORT_NO, B.REPORT_MEMBER_NO, B.REPORT_CODE, B.REPORT_DATE, B.REASON)
VALUES(SEQ_REPORT_NO.NEXTVAL, 1, 'SW', SYSDATE, 'NULL');
INSERT INTO TBL_REPORT B( B.REPORT_NO, B.REPORT_MEMBER_NO, B.REPORT_CODE, B.REPORT_DATE, B.REASON)
VALUES(SEQ_REPORT_NO.NEXTVAL, 1, 'SW', SYSDATE, 'NULL');
INSERT INTO TBL_REPORT B( B.REPORT_NO, B.REPORT_MEMBER_NO, B.REPORT_CODE, B.REPORT_DATE, B.REASON)
VALUES(SEQ_REPORT_NO.NEXTVAL, 1, 'GM', SYSDATE, 'NULL');
INSERT INTO TBL_REPORT B( B.REPORT_NO, B.REPORT_MEMBER_NO, B.REPORT_CODE, B.REPORT_DATE, B.REASON)
VALUES(SEQ_REPORT_NO.NEXTVAL, 1, 'GM', SYSDATE, 'NULL');
INSERT INTO TBL_REPORT B( B.REPORT_NO, B.REPORT_MEMBER_NO, B.REPORT_CODE, B.REPORT_DATE, B.REASON)
VALUES(SEQ_REPORT_NO.NEXTVAL, 1, 'GM', SYSDATE, 'NULL');
INSERT INTO TBL_REPORT B( B.REPORT_NO, B.REPORT_MEMBER_NO, B.REPORT_CODE, B.REPORT_DATE, B.REASON)
VALUES(SEQ_REPORT_NO.NEXTVAL, 1, 'GM', SYSDATE, 'NULL');
INSERT INTO TBL_REPORT B( B.REPORT_NO, B.REPORT_MEMBER_NO, B.REPORT_CODE, B.REPORT_DATE, B.REASON)
VALUES(SEQ_REPORT_NO.NEXTVAL, 1, 'SW', SYSDATE, 'NULL');
INSERT INTO TBL_REPORT B( B.REPORT_NO, B.REPORT_MEMBER_NO, B.REPORT_CODE, B.REPORT_DATE, B.REASON)
VALUES(SEQ_REPORT_NO.NEXTVAL, 1, 'LA', SYSDATE, 'NULL');
INSERT INTO TBL_REPORT B( B.REPORT_NO, B.REPORT_MEMBER_NO, B.REPORT_CODE, B.REPORT_DATE, B.REASON)
VALUES(SEQ_REPORT_NO.NEXTVAL, 1, 'LA', SYSDATE, 'NULL');
INSERT INTO TBL_REPORT B( B.REPORT_NO, B.REPORT_MEMBER_NO, B.REPORT_CODE, B.REPORT_DATE, B.REASON)
VALUES(SEQ_REPORT_NO.NEXTVAL, 1, 'LA', SYSDATE, 'NULL');
INSERT INTO TBL_REPORT B( B.REPORT_NO, B.REPORT_MEMBER_NO, B.REPORT_CODE, B.REPORT_DATE, B.REASON)
VALUES(SEQ_REPORT_NO.NEXTVAL, 1, 'ETC', SYSDATE, 'NULL');
INSERT INTO TBL_REPORT B( B.REPORT_NO, B.REPORT_MEMBER_NO, B.REPORT_CODE, B.REPORT_DATE, B.REASON)
VALUES(SEQ_REPORT_NO.NEXTVAL, 1, 'ETC', SYSDATE, 'NULL');
COMMIT;

-- 신고 첨부파일 테이블
CREATE TABLE TBL_REPORT_ATTACHMENT(
  REPORT_ATTACHMENT_NO NUMBER PRIMARY KEY,
  REF_REPORT_NO NUMBER REFERENCES TBL_REPORT(REPORT_NO),
  FILE_PATH VARCHAR2(300) NOT NULL,
  ORIGINAL_NAME VARCHAR2(255) NOT NULL,
  FILE_NAME VARCHAR2(80) NOT NULL,
  THUMBNAIL_PATH VARCHAR2(255),
  UPLOAD_DATE DATE NOT NULL,
  ATTACHMENT_STATUS VARCHAR2(2) DEFAULT 'Y' NOT NULL CHECK(ATTACHMENT_STATUS IN ('Y', 'N'))
);
COMMENT ON TABLE TBL_REPORT_ATTACHMENT IS '신고첨부파일';
COMMENT ON COLUMN TBL_REPORT_ATTACHMENT.REPORT_ATTACHMENT_NO IS '첨부파일번호';
COMMENT ON COLUMN TBL_REPORT_ATTACHMENT.REF_REPORT_NO IS '신고번호';
COMMENT ON COLUMN TBL_REPORT_ATTACHMENT.FILE_PATH IS '파일경로';
COMMENT ON COLUMN TBL_REPORT_ATTACHMENT.ORIGINAL_NAME IS '첨부파일명';
COMMENT ON COLUMN TBL_REPORT_ATTACHMENT.FILE_NAME IS '변환된이름';
COMMENT ON COLUMN TBL_REPORT_ATTACHMENT.UPLOAD_DATE IS '업로드일시';
COMMENT ON COLUMN TBL_REPORT_ATTACHMENT.THUMBNAIL_PATH IS '썸네일경로';
COMMENT ON COLUMN TBL_REPORT_ATTACHMENT.ATTACHMENT_STATUS IS '상태';

-- 회원제재이력
CREATE TABLE TBL_REPORT_HISTORY(
  CONSTRAINT_NO NUMBER PRIMARY KEY,
  CONSTRAINT_MEMBER_NO NUMBER REFERENCES TBL_MEMBER(MEMBER_NO),
  CONSTRAINT_START_DATE DATE NOT NULL,
  CONSTRAINT_END_DATE DATE
);
COMMENT ON TABLE TBL_REPORT_HISTORY IS '회원제재이력';
COMMENT ON COLUMN TBL_REPORT_HISTORY.CONSTRAINT_NO IS '회원제재이력번호';
COMMENT ON COLUMN TBL_REPORT_HISTORY.CONSTRAINT_MEMBER_NO IS '제재대상회원';
COMMENT ON COLUMN TBL_REPORT_HISTORY.CONSTRAINT_START_DATE IS '제재시작일자';
COMMENT ON COLUMN TBL_REPORT_HISTORY.CONSTRAINT_END_DATE IS '제재종료일자';

-- 게시글 분류 테이블 생성
CREATE TABLE TBL_POST_CLASSIFICATION(
  CLASSIFICATION_CODE VARCHAR2(30) PRIMARY KEY,
  CLASSIFICATION_KIND VARCHAR2(30) NOT NULL
); 
COMMENT ON TABLE TBL_POST_CLASSIFICATION IS '게시글분류';
COMMENT ON COLUMN TBL_POST_CLASSIFICATION.CLASSIFICATION_CODE IS '분류코드';
COMMENT ON COLUMN TBL_POST_CLASSIFICATION.CLASSIFICATION_KIND IS '분류유형';

-- 게시글 분류 인서트
INSERT
  INTO TBL_POST_CLASSIFICATION
(
  CLASSIFICATION_CODE
, CLASSIFICATION_KIND
)
VALUES
(
  'NT' --NOTICE
, '공지사항'
);
INSERT
  INTO TBL_POST_CLASSIFICATION
(
  CLASSIFICATION_CODE
, CLASSIFICATION_KIND
)
VALUES
(
  'RPR' -- REPORT
, '신고'
);
INSERT
  INTO TBL_POST_CLASSIFICATION
(
  CLASSIFICATION_CODE
, CLASSIFICATION_KIND
)
VALUES
(
  'QNA' -- 자주묻는질문
, '자주묻는질문'
);
COMMIT;

-- 게시판 테이블 생성
CREATE TABLE TBL_NOTICE(
  NOTICE_NO NUMBER PRIMARY KEY,
  MEMBER_NO NUMBER REFERENCES TBL_MEMBER(MEMBER_NO),
  NOTICE_CATEGORY_CODE VARCHAR2(50) REFERENCES TBL_POST_CLASSIFICATION(CLASSIFICATION_CODE),
  NOTICE_SUBJECT VARCHAR2(100) NOT NULL,
  NOTICE_BODY VARCHAR2(1000) NOT NULL,
  NOTICE_REGIST_DATE DATE NOT NULL,
  NOTICE_REVISE_DATE DATE,
  NOTICE_STATUS VARCHAR2(50) DEFAULT 'Y' NOT NULL CHECK(NOTICE_STATUS IN ('Y', 'N')),
  NOTICE_VIEW_COUNT NUMBER DEFAULT 0 NOT NULL
);
COMMENT ON TABLE TBL_NOTICE IS '게시판';
COMMENT ON COLUMN TBL_NOTICE.MEMBER_NO IS '회원번호';
COMMENT ON COLUMN TBL_NOTICE.NOTICE_NO IS '글번호';
COMMENT ON COLUMN TBL_NOTICE.NOTICE_CATEGORY_CODE IS '분류코드';
COMMENT ON COLUMN TBL_NOTICE.NOTICE_SUBJECT IS '제목';
COMMENT ON COLUMN TBL_NOTICE.NOTICE_BODY IS '내용';
COMMENT ON COLUMN TBL_NOTICE.NOTICE_REGIST_DATE IS '작성일자';
COMMENT ON COLUMN TBL_NOTICE.NOTICE_REVISE_DATE IS '수정일자';
COMMENT ON COLUMN TBL_NOTICE.NOTICE_STATUS IS '상태';
COMMENT ON COLUMN TBL_NOTICE.NOTICE_VIEW_COUNT IS '조회수';

INSERT INTO TBL_NOTICE A ( A.NOTICE_NO, A.NOTICE_CATEGORY_CODE, A.NOTICE_SUBJECT, A.NOTICE_BODY, A.MEMBER_NO , A.NOTICE_REGIST_DATE   )  
VALUES ( SEQ_NOTICE_NO.NEXTVAL,'NT', '공지', '공지입니다123',  1, SYSDATE );
INSERT INTO TBL_NOTICE A ( A.NOTICE_NO, A.NOTICE_CATEGORY_CODE, A.NOTICE_SUBJECT, A.NOTICE_BODY, A.MEMBER_NO , A.NOTICE_REGIST_DATE   )  
VALUES ( SEQ_NOTICE_NO.NEXTVAL,'NT', '공지공지', '공지입니다123',  1, SYSDATE );
INSERT INTO TBL_NOTICE A ( A.NOTICE_NO, A.NOTICE_CATEGORY_CODE, A.NOTICE_SUBJECT, A.NOTICE_BODY, A.MEMBER_NO , A.NOTICE_REGIST_DATE   )  
VALUES ( SEQ_NOTICE_NO.NEXTVAL,'NT', '공지공지공지', '공지입니다123',  1, SYSDATE );
INSERT INTO TBL_NOTICE A ( A.NOTICE_NO, A.NOTICE_CATEGORY_CODE, A.NOTICE_SUBJECT, A.NOTICE_BODY, A.MEMBER_NO , A.NOTICE_REGIST_DATE   )  
VALUES ( SEQ_NOTICE_NO.NEXTVAL,'NT', '공지공지공지공지', '공지입니다123',  1, SYSDATE );
INSERT INTO TBL_NOTICE A ( A.NOTICE_NO, A.NOTICE_CATEGORY_CODE, A.NOTICE_SUBJECT, A.NOTICE_BODY, A.MEMBER_NO , A.NOTICE_REGIST_DATE   )  
VALUES ( SEQ_NOTICE_NO.NEXTVAL,'NT', '공지공지공지공지공지', '공지입니다123',  1, SYSDATE );
INSERT INTO TBL_NOTICE A ( A.NOTICE_NO, A.NOTICE_CATEGORY_CODE, A.NOTICE_SUBJECT, A.NOTICE_BODY, A.MEMBER_NO , A.NOTICE_REGIST_DATE   )  
VALUES ( SEQ_NOTICE_NO.NEXTVAL,'NT', '공지공지공지공지', '공지입니다123',  1, SYSDATE );
INSERT INTO TBL_NOTICE A ( A.NOTICE_NO, A.NOTICE_CATEGORY_CODE, A.NOTICE_SUBJECT, A.NOTICE_BODY, A.MEMBER_NO , A.NOTICE_REGIST_DATE   )  
VALUES ( SEQ_NOTICE_NO.NEXTVAL,'NT', '공지공지공지', '공지입니다123',  1, SYSDATE );
INSERT INTO TBL_NOTICE A ( A.NOTICE_NO, A.NOTICE_CATEGORY_CODE, A.NOTICE_SUBJECT, A.NOTICE_BODY, A.MEMBER_NO , A.NOTICE_REGIST_DATE   )  
VALUES ( SEQ_NOTICE_NO.NEXTVAL,'NT', '공지공지', '공지입니다123',  1, SYSDATE );
INSERT INTO TBL_NOTICE A ( A.NOTICE_NO, A.NOTICE_CATEGORY_CODE, A.NOTICE_SUBJECT, A.NOTICE_BODY, A.MEMBER_NO , A.NOTICE_REGIST_DATE   )  
VALUES ( SEQ_NOTICE_NO.NEXTVAL,'NT', '공지', '공지입니다123',  1, SYSDATE );
INSERT INTO TBL_NOTICE A ( A.NOTICE_NO, A.NOTICE_CATEGORY_CODE, A.NOTICE_SUBJECT, A.NOTICE_BODY, A.MEMBER_NO , A.NOTICE_REGIST_DATE   )  
VALUES ( SEQ_NOTICE_NO.NEXTVAL,'NT', '공지공지', '공지입니다123',  1, SYSDATE );
INSERT INTO TBL_NOTICE A ( A.NOTICE_NO, A.NOTICE_CATEGORY_CODE, A.NOTICE_SUBJECT, A.NOTICE_BODY, A.MEMBER_NO , A.NOTICE_REGIST_DATE   )  
VALUES ( SEQ_NOTICE_NO.NEXTVAL,'NT', '공지공지공지', '공지입니다123',  1, SYSDATE );
INSERT INTO TBL_NOTICE A ( A.NOTICE_NO, A.NOTICE_CATEGORY_CODE, A.NOTICE_SUBJECT, A.NOTICE_BODY, A.MEMBER_NO , A.NOTICE_REGIST_DATE   )  
VALUES ( SEQ_NOTICE_NO.NEXTVAL,'NT', '공지공지공지공지', '공지입니다123',  1, SYSDATE );
INSERT INTO TBL_NOTICE A ( A.NOTICE_NO, A.NOTICE_CATEGORY_CODE, A.NOTICE_SUBJECT, A.NOTICE_BODY, A.MEMBER_NO , A.NOTICE_REGIST_DATE   )  
VALUES ( SEQ_NOTICE_NO.NEXTVAL,'NT', '공지공지공지공지공지', '공지입니다123',  1, SYSDATE );
INSERT INTO TBL_NOTICE A ( A.NOTICE_NO, A.NOTICE_CATEGORY_CODE, A.NOTICE_SUBJECT, A.NOTICE_BODY, A.MEMBER_NO , A.NOTICE_REGIST_DATE   )  
VALUES ( SEQ_NOTICE_NO.NEXTVAL,'NT', '공지공지공지공지', '공지입니다123',  1, SYSDATE );
INSERT INTO TBL_NOTICE A ( A.NOTICE_NO, A.NOTICE_CATEGORY_CODE, A.NOTICE_SUBJECT, A.NOTICE_BODY, A.MEMBER_NO , A.NOTICE_REGIST_DATE   )  
VALUES ( SEQ_NOTICE_NO.NEXTVAL,'NT', '공지공지공지', '공지입니다123',  1, SYSDATE );
INSERT INTO TBL_NOTICE A ( A.NOTICE_NO, A.NOTICE_CATEGORY_CODE, A.NOTICE_SUBJECT, A.NOTICE_BODY, A.MEMBER_NO , A.NOTICE_REGIST_DATE   )  
VALUES ( SEQ_NOTICE_NO.NEXTVAL,'NT', '공지공지', '공지입니다123',  1, SYSDATE );

INSERT INTO TBL_NOTICE A ( A.NOTICE_NO, A.NOTICE_CATEGORY_CODE, A.NOTICE_SUBJECT, A.NOTICE_BODY, A.MEMBER_NO , A.NOTICE_REGIST_DATE   )  
VALUES ( SEQ_NOTICE_NO.NEXTVAL,'RPR', '신고', '님신고',  1, SYSDATE );
INSERT INTO TBL_NOTICE A ( A.NOTICE_NO, A.NOTICE_CATEGORY_CODE, A.NOTICE_SUBJECT, A.NOTICE_BODY, A.MEMBER_NO , A.NOTICE_REGIST_DATE   )  
VALUES ( SEQ_NOTICE_NO.NEXTVAL,'RPR', '신고신고', '님신고',  1, SYSDATE );
INSERT INTO TBL_NOTICE A ( A.NOTICE_NO, A.NOTICE_CATEGORY_CODE, A.NOTICE_SUBJECT, A.NOTICE_BODY, A.MEMBER_NO , A.NOTICE_REGIST_DATE   )  
VALUES ( SEQ_NOTICE_NO.NEXTVAL,'RPR', '신고신고신고', '님신고',  1, SYSDATE );
INSERT INTO TBL_NOTICE A ( A.NOTICE_NO, A.NOTICE_CATEGORY_CODE, A.NOTICE_SUBJECT, A.NOTICE_BODY, A.MEMBER_NO , A.NOTICE_REGIST_DATE   )  
VALUES ( SEQ_NOTICE_NO.NEXTVAL,'RPR', '신고신고신고신고', '님신고',  1, SYSDATE );
INSERT INTO TBL_NOTICE A ( A.NOTICE_NO, A.NOTICE_CATEGORY_CODE, A.NOTICE_SUBJECT, A.NOTICE_BODY, A.MEMBER_NO , A.NOTICE_REGIST_DATE   )  
VALUES ( SEQ_NOTICE_NO.NEXTVAL,'RPR', '신고신고신고신고신고', '님신고',  1, SYSDATE );
INSERT INTO TBL_NOTICE A ( A.NOTICE_NO, A.NOTICE_CATEGORY_CODE, A.NOTICE_SUBJECT, A.NOTICE_BODY, A.MEMBER_NO , A.NOTICE_REGIST_DATE   )  
VALUES ( SEQ_NOTICE_NO.NEXTVAL,'RPR', '신고신고신고신고', '님신고',  1, SYSDATE );
INSERT INTO TBL_NOTICE A ( A.NOTICE_NO, A.NOTICE_CATEGORY_CODE, A.NOTICE_SUBJECT, A.NOTICE_BODY, A.MEMBER_NO , A.NOTICE_REGIST_DATE   )  
VALUES ( SEQ_NOTICE_NO.NEXTVAL,'RPR', '신고신고신고', '님신고',  1, SYSDATE );
INSERT INTO TBL_NOTICE A ( A.NOTICE_NO, A.NOTICE_CATEGORY_CODE, A.NOTICE_SUBJECT, A.NOTICE_BODY, A.MEMBER_NO , A.NOTICE_REGIST_DATE   )  
VALUES ( SEQ_NOTICE_NO.NEXTVAL,'RPR', '신고신고', '님신고',  1, SYSDATE );
INSERT INTO TBL_NOTICE A ( A.NOTICE_NO, A.NOTICE_CATEGORY_CODE, A.NOTICE_SUBJECT, A.NOTICE_BODY, A.MEMBER_NO , A.NOTICE_REGIST_DATE   )  
VALUES ( SEQ_NOTICE_NO.NEXTVAL,'RPR', '신고', '님신고',  1, SYSDATE );
INSERT INTO TBL_NOTICE A ( A.NOTICE_NO, A.NOTICE_CATEGORY_CODE, A.NOTICE_SUBJECT, A.NOTICE_BODY, A.MEMBER_NO , A.NOTICE_REGIST_DATE   )  
VALUES ( SEQ_NOTICE_NO.NEXTVAL,'RPR', '신고신고', '님신고',  1, SYSDATE );
INSERT INTO TBL_NOTICE A ( A.NOTICE_NO, A.NOTICE_CATEGORY_CODE, A.NOTICE_SUBJECT, A.NOTICE_BODY, A.MEMBER_NO , A.NOTICE_REGIST_DATE   )  
VALUES ( SEQ_NOTICE_NO.NEXTVAL,'RPR', '신고신고신고', '님신고',  1, SYSDATE );
INSERT INTO TBL_NOTICE A ( A.NOTICE_NO, A.NOTICE_CATEGORY_CODE, A.NOTICE_SUBJECT, A.NOTICE_BODY, A.MEMBER_NO , A.NOTICE_REGIST_DATE   )  
VALUES ( SEQ_NOTICE_NO.NEXTVAL,'RPR', '신고신고신고신고', '님신고',  1, SYSDATE );
INSERT INTO TBL_NOTICE A ( A.NOTICE_NO, A.NOTICE_CATEGORY_CODE, A.NOTICE_SUBJECT, A.NOTICE_BODY, A.MEMBER_NO , A.NOTICE_REGIST_DATE   )  
VALUES ( SEQ_NOTICE_NO.NEXTVAL,'RPR', '신고신고신고신고신고', '님신고',  1, SYSDATE );
INSERT INTO TBL_NOTICE A ( A.NOTICE_NO, A.NOTICE_CATEGORY_CODE, A.NOTICE_SUBJECT, A.NOTICE_BODY, A.MEMBER_NO , A.NOTICE_REGIST_DATE   )  
VALUES ( SEQ_NOTICE_NO.NEXTVAL,'RPR', '신고신고신고신고', '님신고',  1, SYSDATE );
INSERT INTO TBL_NOTICE A ( A.NOTICE_NO, A.NOTICE_CATEGORY_CODE, A.NOTICE_SUBJECT, A.NOTICE_BODY, A.MEMBER_NO , A.NOTICE_REGIST_DATE   )  
VALUES ( SEQ_NOTICE_NO.NEXTVAL,'RPR', '신고신고신고', '님신고',  1, SYSDATE );
INSERT INTO TBL_NOTICE A ( A.NOTICE_NO, A.NOTICE_CATEGORY_CODE, A.NOTICE_SUBJECT, A.NOTICE_BODY, A.MEMBER_NO , A.NOTICE_REGIST_DATE   )  
VALUES ( SEQ_NOTICE_NO.NEXTVAL,'RPR', '신고신고', '님신고',  1, SYSDATE );
INSERT INTO TBL_NOTICE A ( A.NOTICE_NO, A.NOTICE_CATEGORY_CODE, A.NOTICE_SUBJECT, A.NOTICE_BODY, A.MEMBER_NO , A.NOTICE_REGIST_DATE   )  
VALUES ( SEQ_NOTICE_NO.NEXTVAL,'RPR', '신고', '님신고',  1, SYSDATE );

COMMIT;

-- 게시글 댓글 테이블 생성
CREATE TABLE TBL_NOTICE_COMMENT(
  NOTICE_NO NUMBER PRIMARY KEY REFERENCES TBL_NOTICE(NOTICE_NO),
  MEMBER_NO NUMBER REFERENCES TBL_MEMBER(MEMBER_NO),
  COMMENT_BODY VARCHAR2(100) NOT NULL,
  COMMENT_ENROLL_DATE DATE NOT NULL
);
COMMENT ON TABLE TBL_NOTICE_COMMENT IS '게시글댓글';
COMMENT ON COLUMN TBL_NOTICE_COMMENT.NOTICE_NO IS '글번호';
COMMENT ON COLUMN TBL_NOTICE_COMMENT.MEMBER_NO IS '회원번호';
COMMENT ON COLUMN TBL_NOTICE_COMMENT.COMMENT_BODY IS '댓글내용';
COMMENT ON COLUMN TBL_NOTICE_COMMENT.COMMENT_ENROLL_DATE IS '등록일시';

-- 게시판 첨부파일 테이블
CREATE TABLE TBL_NOTICE_ATTACHMENT(
  NOTICE_ATTACHMENT_NO NUMBER PRIMARY KEY,
  REF_NOTICE_NO NUMBER REFERENCES TBL_NOTICE(NOTICE_NO),
  FILE_PATH VARCHAR2(300) NOT NULL,
  ORIGINAL_NAME VARCHAR2(255) NOT NULL,
  FILE_NAME VARCHAR2(80) NOT NULL,
  THUMBNAIL_PATH VARCHAR2(255),
  UPLOAD_DATE DATE NOT NULL,
  ATTACHMENT_STATUS VARCHAR2(2) DEFAULT 'Y' NOT NULL CHECK(ATTACHMENT_STATUS IN ('Y', 'N'))
);
COMMENT ON TABLE TBL_NOTICE_ATTACHMENT IS '게시판첨부파일';
COMMENT ON COLUMN TBL_NOTICE_ATTACHMENT.NOTICE_ATTACHMENT_NO IS '첨부파일번호';
COMMENT ON COLUMN TBL_NOTICE_ATTACHMENT.REF_NOTICE_NO IS '게시판번호';
COMMENT ON COLUMN TBL_NOTICE_ATTACHMENT.FILE_PATH IS '파일경로';
COMMENT ON COLUMN TBL_NOTICE_ATTACHMENT.ORIGINAL_NAME IS '첨부파일명';
COMMENT ON COLUMN TBL_NOTICE_ATTACHMENT.FILE_NAME IS '변환된이름';
COMMENT ON COLUMN TBL_NOTICE_ATTACHMENT.UPLOAD_DATE IS '업로드일시';
COMMENT ON COLUMN TBL_NOTICE_ATTACHMENT.THUMBNAIL_PATH IS '썸네일경로';
COMMENT ON COLUMN TBL_NOTICE_ATTACHMENT.ATTACHMENT_STATUS IS '상태';
-- 개설수업 테이블 생성
CREATE TABLE TBL_OPENED_CLASS 
(
  CLASS_NO NUMBER NOT NULL 
, TRAINER_NO NUMBER NOT NULL 
, CLASS_NAME VARCHAR2(70 BYTE) NOT NULL 
, CLASS_KIND VARCHAR2(50 BYTE) NOT NULL 
, CLASS_APPROVAL VARCHAR2(30 BYTE) DEFAULT 'N' 
, CLASS_STATUS VARCHAR2(50 BYTE) DEFAULT 'N' 
, CREATED_DATE VARCHAR2(20 BYTE) NOT NULL 
, CLASS_CATEGORY VARCHAR2(50 BYTE) NOT NULL 
, CLASS_INTRO VARCHAR2(50 BYTE) NOT NULL 
, CLASS_INTRODUCE VARCHAR2(200 BYTE) NOT NULL 
, CLASS_COUNT VARCHAR2(20 BYTE) DEFAULT 0 
, CONSTRAINT SYS_C008171 PRIMARY KEY 
  (
    CLASS_NO 
  )
  USING INDEX 
  (
      CREATE UNIQUE INDEX SYS_C008171 ON TBL_OPENED_CLASS (CLASS_NO ASC) 
      LOGGING 
      TABLESPACE SYSTEM 
      PCTFREE 10 
      INITRANS 2 
      STORAGE 
      ( 
        INITIAL 65536 
        NEXT 1048576 
        MINEXTENTS 1 
        MAXEXTENTS UNLIMITED 
        FREELISTS 1 
        FREELIST GROUPS 1 
        BUFFER_POOL DEFAULT 
      ) 
      NOPARALLEL 
  )
  ENABLE 
) 
LOGGING 
TABLESPACE SYSTEM 
PCTFREE 10 
PCTUSED 40 
INITRANS 1 
STORAGE 
( 
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1 
  MAXEXTENTS UNLIMITED 
  FREELISTS 1 
  FREELIST GROUPS 1 
  BUFFER_POOL DEFAULT 
) 
NOPARALLEL;

ALTER TABLE TBL_OPENED_CLASS
ADD CONSTRAINT SYS_C008172 FOREIGN KEY
(
  TRAINER_NO 
)
REFERENCES TBL_MEMBER
(
  MEMBER_NO 
)
ENABLE;

ALTER TABLE TBL_OPENED_CLASS
ADD CONSTRAINT SYS_C008170 CHECK 
("CLASS_APPROVAL"='Y' OR "CLASS_APPROVAL"='N')
ENABLE;

COMMENT ON TABLE TBL_OPENED_CLASS IS '개설수업';
COMMENT ON COLUMN TBL_OPENED_CLASS.CLASS_NO IS '개설수업번호';
COMMENT ON COLUMN TBL_OPENED_CLASS.TRAINER_NO IS '트레이너회원번호';
COMMENT ON COLUMN TBL_OPENED_CLASS.CLASS_NAME IS '수업이름';
COMMENT ON COLUMN TBL_OPENED_CLASS.CLASS_KIND IS '수업유형';
COMMENT ON COLUMN TBL_OPENED_CLASS.CLASS_APPROVAL IS '승인여부';
COMMENT ON COLUMN TBL_OPENED_CLASS.CLASS_STATUS IS '수업상태';
COMMENT ON COLUMN TBL_OPENED_CLASS.CREATED_DATE IS '개설일자';
COMMENT ON COLUMN TBL_OPENED_CLASS.CLASS_CATEGORY IS '수업카테고리';
COMMENT ON COLUMN TBL_OPENED_CLASS.CLASS_INTRO IS '수업소개3가지';
COMMENT ON COLUMN TBL_OPENED_CLASS.CLASS_INTRODUCE IS '개설수업소개';
COMMENT ON COLUMN TBL_OPENED_CLASS.CLASS_COUNT IS '조회수';

-- 개설수업 첨부파일 테이블
CREATE TABLE TBL_CLASS_ATTACHMENT 
(
  CLASS_ATTACHMENT_NO NUMBER NOT NULL 
, REF_CLASS_NO NUMBER NOT NULL 
, ORIGINAL_NAME VARCHAR2(255 BYTE) NOT NULL 
, THUMBNAIL_PATH VARCHAR2(255 BYTE) 
, ATTACHMENT_STATUS VARCHAR2(2 BYTE) DEFAULT 'Y' 
, SAVED_NAME VARCHAR2(300 BYTE) NOT NULL 
, SAVE_PATH VARCHAR2(1000 BYTE) NOT NULL 
, REF_TRAINER_NO NUMBER NOT NULL 
, FILE_TYPE VARCHAR2(20 BYTE) 
, CONSTRAINT SYS_C008179 PRIMARY KEY 
  (
    CLASS_ATTACHMENT_NO 
  )
  USING INDEX 
  (
      CREATE UNIQUE INDEX SYS_C008179 ON TBL_CLASS_ATTACHMENT (CLASS_ATTACHMENT_NO ASC) 
      LOGGING 
      TABLESPACE SYSTEM 
      PCTFREE 10 
      INITRANS 2 
      STORAGE 
      ( 
        INITIAL 65536 
        NEXT 1048576 
        MINEXTENTS 1 
        MAXEXTENTS UNLIMITED 
        FREELISTS 1 
        FREELIST GROUPS 1 
        BUFFER_POOL DEFAULT 
      ) 
      NOPARALLEL 
  )
  ENABLE 
) 
LOGGING 
TABLESPACE SYSTEM 
PCTFREE 10 
PCTUSED 40 
INITRANS 1 
STORAGE 
( 
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1 
  MAXEXTENTS UNLIMITED 
  FREELISTS 1 
  FREELIST GROUPS 1 
  BUFFER_POOL DEFAULT 
) 
NOPARALLEL;

ALTER TABLE TBL_CLASS_ATTACHMENT
ADD CONSTRAINT SYS_C008178 CHECK 
(ATTACHMENT_STATUS IN ('Y', 'N'))
ENABLE;

ALTER TABLE TBL_CLASS_ATTACHMENT
ADD CONSTRAINT TBL_CLASS_ATTACHMENT_CHK1 CHECK 
(FILE_TYPE IN ('CLASSNAME', 'INTRODUCE'))
ENABLE;

COMMENT ON TABLE TBL_CLASS_ATTACHMENT IS '개설수업첨부파일';
COMMENT ON COLUMN TBL_CLASS_ATTACHMENT.CLASS_ATTACHMENT_NO IS '첨부파일번호';
COMMENT ON COLUMN TBL_CLASS_ATTACHMENT.REF_CLASS_NO IS '수업번호';
COMMENT ON COLUMN TBL_CLASS_ATTACHMENT.ORIGINAL_NAME IS '첨부파일명';
COMMENT ON COLUMN TBL_CLASS_ATTACHMENT.THUMBNAIL_PATH IS '썸네일경로';
COMMENT ON COLUMN TBL_CLASS_ATTACHMENT.ATTACHMENT_STATUS IS '상태';
COMMENT ON COLUMN TBL_CLASS_ATTACHMENT.SAVED_NAME IS '파일저장이름';
COMMENT ON COLUMN TBL_CLASS_ATTACHMENT.SAVE_PATH IS '저장경로';
COMMENT ON COLUMN TBL_CLASS_ATTACHMENT.REF_TRAINER_NO IS '트레이너번호';
COMMENT ON COLUMN TBL_CLASS_ATTACHMENT.FILE_TYPE IS '파일타입';

-- 실시간그룹수업내역 테이블 생성
CREATE TABLE TBL_REALTIME_GROUP_CLASS(
  RGC_MANAGE_NO NUMBER PRIMARY KEY,
  OPENED_CLASS_NO NUMBER REFERENCES TBL_OPENED_CLASS(CLASS_NO),
  EDITION_NO NUMBER NOT NULL,
  CLASS_DATE DATE NOT NULL,
  TOTAL_PARTICIPANTS NUMBER NOT NULL
);
COMMENT ON TABLE TBL_REALTIME_GROUP_CLASS IS '실시간그룹수업내역';
COMMENT ON COLUMN TBL_REALTIME_GROUP_CLASS.RGC_MANAGE_NO IS '관리번호';
COMMENT ON COLUMN TBL_REALTIME_GROUP_CLASS.OPENED_CLASS_NO IS '개설수업번호';
COMMENT ON COLUMN TBL_REALTIME_GROUP_CLASS.EDITION_NO IS '회차';
COMMENT ON COLUMN TBL_REALTIME_GROUP_CLASS.CLASS_DATE IS '수업일자';
COMMENT ON COLUMN TBL_REALTIME_GROUP_CLASS.TOTAL_PARTICIPANTS IS '참여자수';

-- 수업리뷰 테이블 생성
CREATE TABLE TBL_CLASS_REVIEW(
  REVIEW_NO NUMBER PRIMARY KEY,
  OPENED_CLASS_NO NUMBER REFERENCES TBL_OPENED_CLASS(CLASS_NO),
  MEMBER_NO NUMBER REFERENCES TBL_MEMBER(MEMBER_NO),
  REVIEW_BODY VARCHAR2(2000) NOT NULL,
  REVIEW_SOCRE NUMBER NOT NULL,
  REVIEW_ENROLL_DATE DATE NOT NULL,
  REVIEW_REVISION_DATE DATE,
  REVIEW_STATUS VARCHAR2(2) DEFAULT 'Y' CHECK(REVIEW_STATUS IN ('Y', 'N')) NOT NULL
);
COMMENT ON TABLE TBL_CLASS_REVIEW IS '수업리뷰';
COMMENT ON COLUMN TBL_CLASS_REVIEW.REVIEW_NO IS '리뷰번호';
COMMENT ON COLUMN TBL_CLASS_REVIEW.OPENED_CLASS_NO IS '개설수업번호';
COMMENT ON COLUMN TBL_CLASS_REVIEW.MEMBER_NO IS '회원번호';
COMMENT ON COLUMN TBL_CLASS_REVIEW.REVIEW_BODY IS '리뷰내용';
COMMENT ON COLUMN TBL_CLASS_REVIEW.REVIEW_SOCRE IS '평점';
COMMENT ON COLUMN TBL_CLASS_REVIEW.REVIEW_ENROLL_DATE IS '리뷰작성일자';
COMMENT ON COLUMN TBL_CLASS_REVIEW.REVIEW_REVISION_DATE IS '리뷰수정일자';
COMMENT ON COLUMN TBL_CLASS_REVIEW.REVIEW_STATUS IS '리뷰상태';

-- 리뷰 첨부파일 테이블
CREATE TABLE TBL_REVIEW_ATTACHMENT(
  REVIEW_ATTACHMENT_NO NUMBER PRIMARY KEY,
  REF_REVIEW_NO NUMBER REFERENCES TBL_CLASS_REVIEW(REVIEW_NO),
  FILE_PATH VARCHAR2(300) NOT NULL,
  ORIGINAL_NAME VARCHAR2(255) NOT NULL,
  FILE_NAME VARCHAR2(80) NOT NULL,
  THUMBNAIL_PATH VARCHAR2(255),
  UPLOAD_DATE DATE NOT NULL,
  ATTACHMENT_STATUS VARCHAR2(2) DEFAULT 'Y' NOT NULL CHECK(ATTACHMENT_STATUS IN ('Y', 'N'))
);
COMMENT ON TABLE TBL_REVIEW_ATTACHMENT IS '리뷰첨부파일';
COMMENT ON COLUMN TBL_REVIEW_ATTACHMENT.REVIEW_ATTACHMENT_NO IS '첨부파일번호';
COMMENT ON COLUMN TBL_REVIEW_ATTACHMENT.REF_REVIEW_NO IS '리뷰번호';
COMMENT ON COLUMN TBL_REVIEW_ATTACHMENT.FILE_PATH IS '파일경로';
COMMENT ON COLUMN TBL_REVIEW_ATTACHMENT.ORIGINAL_NAME IS '첨부파일명';
COMMENT ON COLUMN TBL_REVIEW_ATTACHMENT.FILE_NAME IS '변환된이름';
COMMENT ON COLUMN TBL_REVIEW_ATTACHMENT.UPLOAD_DATE IS '업로드일시';
COMMENT ON COLUMN TBL_REVIEW_ATTACHMENT.THUMBNAIL_PATH IS '썸네일경로';
COMMENT ON COLUMN TBL_REVIEW_ATTACHMENT.ATTACHMENT_STATUS IS '상태';

-- 그룹수업참여이력 테이블 생성
CREATE TABLE TBL_GROUP_CLASS_PARTICIPATION(
  OPENED_CLASS_NO NUMBER REFERENCES TBL_OPENED_CLASS(CLASS_NO), 
  MEMBER_NO NUMBER REFERENCES TBL_MEMBER(MEMBER_NO),
  PARTICIPATION_DATE DATE NOT NULL,
  PARTICIPATION_TIME VARCHAR2(50) NOT NULL,
  CONSTRAINT PK_GCP PRIMARY KEY (OPENED_CLASS_NO, MEMBER_NO)
);
COMMENT ON TABLE TBL_GROUP_CLASS_PARTICIPATION IS '그룹수업참여이력';
COMMENT ON COLUMN TBL_GROUP_CLASS_PARTICIPATION.OPENED_CLASS_NO IS '개설수업번호';
COMMENT ON COLUMN TBL_GROUP_CLASS_PARTICIPATION.MEMBER_NO IS '회원번호';
COMMENT ON COLUMN TBL_GROUP_CLASS_PARTICIPATION.PARTICIPATION_DATE IS '참여일자';
COMMENT ON COLUMN TBL_GROUP_CLASS_PARTICIPATION.PARTICIPATION_TIME IS '참여시간';

-- 회차권이용내역 테이블 생성
CREATE TABLE TBL_VOUCHER_USE(
  OPENED_CLASS_NO NUMBER REFERENCES TBL_OPENED_CLASS(CLASS_NO),
  MEMBER_NO NUMBER REFERENCES TBL_MEMBER(MEMBER_NO),
  USE_DATE DATE NOT NULL,
  CONSTRAINT PK_VU PRIMARY KEY (OPENED_CLASS_NO, MEMBER_NO)
);
COMMENT ON TABLE TBL_VOUCHER_USE IS '회차권이용내역';
COMMENT ON COLUMN TBL_VOUCHER_USE.OPENED_CLASS_NO IS '개설수업번호';
COMMENT ON COLUMN TBL_VOUCHER_USE.MEMBER_NO IS '회원번호';
COMMENT ON COLUMN TBL_VOUCHER_USE.USE_DATE IS '이용일자';

-- 실시간 그룹참여자 테이블 생성
CREATE TABLE TBL_REALTIME_GROUP_PARTICIPANT(
  RGC_MANAGE_NO NUMBER REFERENCES TBL_REALTIME_GROUP_CLASS(RGC_MANAGE_NO),
  MEMBER_NO NUMBER REFERENCES TBL_MEMBER(MEMBER_NO)
);
COMMENT ON TABLE TBL_REALTIME_GROUP_PARTICIPANT IS '실시간그룹참여자';
COMMENT ON COLUMN TBL_REALTIME_GROUP_PARTICIPANT.RGC_MANAGE_NO IS '관리번호';
COMMENT ON COLUMN TBL_REALTIME_GROUP_PARTICIPANT.MEMBER_NO IS '회원번호';

-- 트레이너피티 승인 내역 테이블 생성
CREATE TABLE TBL_TRAINER_PT_PERMIT(
  PERMIT_NO NUMBER PRIMARY KEY,
  TRAINER_NO NUMBER REFERENCES TBL_MEMBER(MEMBER_NO),
  MEMBER_NO NUMBER REFERENCES TBL_MEMBER(MEMBER_NO),
  APPLY_DATE DATE NOT NULL,
  PERMIT_YN VARCHAR2(30) DEFAULT 'N' CHECK(PERMIT_YN IN ('Y', 'N')) NOT NULL,
  PERMIT_DATE DATE
);
COMMENT ON TABLE TBL_TRAINER_PT_PERMIT IS '트레이너피티승인내역';
COMMENT ON COLUMN TBL_TRAINER_PT_PERMIT.PERMIT_NO IS '승인내역번호';
COMMENT ON COLUMN TBL_TRAINER_PT_PERMIT.TRAINER_NO IS '트레이너번호';
COMMENT ON COLUMN TBL_TRAINER_PT_PERMIT.MEMBER_NO IS '회원번호';
COMMENT ON COLUMN TBL_TRAINER_PT_PERMIT.APPLY_DATE IS '신청일자';
COMMENT ON COLUMN TBL_TRAINER_PT_PERMIT.PERMIT_YN IS '승인여부';
COMMENT ON COLUMN TBL_TRAINER_PT_PERMIT.PERMIT_DATE IS '승인날짜';

-- 상품분류 카테고리 테이블 생성
CREATE TABLE TBL_PRODUCT_SORT_CATEGORY(
  PRODUCT_CODE VARCHAR2(30) PRIMARY KEY,
  PRODUCT_NAME VARCHAR2(70) NOT NULL
);
COMMENT ON TABLE TBL_PRODUCT_SORT_CATEGORY IS '상품분류카테고리';
COMMENT ON COLUMN TBL_PRODUCT_SORT_CATEGORY.PRODUCT_CODE IS '상품코드';
COMMENT ON COLUMN TBL_PRODUCT_SORT_CATEGORY.PRODUCT_NAME IS '상품유형';
-- 인서트
INSERT
  INTO TBL_PRODUCT_SORT_CATEGORY
(
  PRODUCT_CODE
, PRODUCT_NAME
)
VALUES
(
  'MEM_1'
, '멤버쉽 1개월'
);
INSERT
  INTO TBL_PRODUCT_SORT_CATEGORY
(
  PRODUCT_CODE
, PRODUCT_NAME
)
VALUES
(
  'MEM_3'
, '멤버쉽 3개월'
);
INSERT
  INTO TBL_PRODUCT_SORT_CATEGORY
(
  PRODUCT_CODE
, PRODUCT_NAME
)
VALUES
(
  'MEM_6'
, '멤버쉽 6개월'
);
INSERT
  INTO TBL_PRODUCT_SORT_CATEGORY
(
  PRODUCT_CODE
, PRODUCT_NAME
)
VALUES
(
  'PT_1'
, 'PT 1회'
);
INSERT
  INTO TBL_PRODUCT_SORT_CATEGORY
(
  PRODUCT_CODE
, PRODUCT_NAME
)
VALUES
(
  'PT_5'
, 'PT 5회'
);
INSERT
  INTO TBL_PRODUCT_SORT_CATEGORY
(
  PRODUCT_CODE
, PRODUCT_NAME
)
VALUES
(
  'PT_10'
, 'PT 10회'
);
COMMIT;

-- 멤버쉽 상품 테이블 생성
CREATE TABLE TBL_MEMBERSHIP_PRODUCT(
  PRODUCT_CODE VARCHAR2(30) PRIMARY KEY REFERENCES TBL_PRODUCT_SORT_CATEGORY(PRODUCT_CODE),
  PRODUCT_NAME VARCHAR2(70) NOT NULL,
  PRODUCT_PRICE NUMBER NOT NULL
);
COMMENT ON TABLE TBL_MEMBERSHIP_PRODUCT IS '멤버쉽상품';
COMMENT ON COLUMN TBL_MEMBERSHIP_PRODUCT.PRODUCT_CODE IS '상품코드';
COMMENT ON COLUMN TBL_MEMBERSHIP_PRODUCT.PRODUCT_NAME IS '상품명';
COMMENT ON COLUMN TBL_MEMBERSHIP_PRODUCT.PRODUCT_CODE IS '상품가격';

-- 인서트
INSERT INTO TBL_MEMBERSHIP_PRODUCT
( PRODUCT_CODE, PRODUCT_NAME, PRODUCT_PRICE )
VALUES
( 'MEM_1', '멤버쉽 1개월', 30000 );
INSERT INTO TBL_MEMBERSHIP_PRODUCT
( PRODUCT_CODE, PRODUCT_NAME, PRODUCT_PRICE )
VALUES
( 'MEM_3', '멤버쉽 3개월', 90000 );
INSERT INTO TBL_MEMBERSHIP_PRODUCT
( PRODUCT_CODE, PRODUCT_NAME, PRODUCT_PRICE )
VALUES
( 'MEM_6', '멤버쉽 6개월', 180000 );
INSERT INTO TBL_MEMBERSHIP_PRODUCT
( PRODUCT_CODE, PRODUCT_NAME, PRODUCT_PRICE )
VALUES
( 'PT_1', 'PT 1회', 15000 );
INSERT INTO TBL_MEMBERSHIP_PRODUCT
( PRODUCT_CODE, PRODUCT_NAME, PRODUCT_PRICE )
VALUES
( 'PT_5', 'PT 5회', 75000 );
INSERT INTO TBL_MEMBERSHIP_PRODUCT
( PRODUCT_CODE, PRODUCT_NAME, PRODUCT_PRICE )
VALUES
( 'PT_10', 'PT 10회', 150000 );
COMMIT;


-- 회원별상품결제정보 테이블 생성
CREATE TABLE TBL_PURCHASE_PRODUCT(
  PURCHASE_CODE VARCHAR2(30) PRIMARY KEY,
  MEMBER_NO NUMBER REFERENCES TBL_MEMBER(MEMBER_NO),
  PRODUCT_CODE VARCHAR2(30) REFERENCES TBL_MEMBERSHIP_PRODUCT(PRODUCT_CODE),
  PURCHASE_PRICE NUMBER NOT NULL,
  PURCHASE_DATE DATE NOT NULL,
  PURCHASE_PERMIT_NO NUMBER NOT NULL,
  PURCHASE_STATUS VARCHAR2(50) NOT NULL CHECK(PURCHASE_STATUS IN ('완료', '환불'))
);
COMMENT ON TABLE TBL_PURCHASE_PRODUCT IS '회원별상품결제정보';
COMMENT ON COLUMN TBL_PURCHASE_PRODUCT.PURCHASE_CODE IS '결제코드';
COMMENT ON COLUMN TBL_PURCHASE_PRODUCT.MEMBER_NO IS '회원번호';
COMMENT ON COLUMN TBL_PURCHASE_PRODUCT.PRODUCT_CODE IS '상품코드';
COMMENT ON COLUMN TBL_PURCHASE_PRODUCT.PURCHASE_PRICE IS '결제금액';
COMMENT ON COLUMN TBL_PURCHASE_PRODUCT.PURCHASE_DATE IS '결제일자';
COMMENT ON COLUMN TBL_PURCHASE_PRODUCT.PURCHASE_PERMIT_NO IS '결제승인번호';
COMMENT ON COLUMN TBL_PURCHASE_PRODUCT.PURCHASE_STATUS IS '결제상태';

-- 매출 내역 테이블 생성
CREATE TABLE TBL_SALES(
  PURCHASE_CODE VARCHAR2(30) REFERENCES TBL_PURCHASE_PRODUCT(PURCHASE_CODE),
  PURCHASE_SORT VARCHAR2(30) NOT NULL,
  SALES NUMBER NOT NULL,
  PRODUCT VARCHAR2(100) NOT NULL,
  QUANTITY NUMBER NOT NULL
);
COMMENT ON TABLE TBL_SALES IS '매출내역';
COMMENT ON COLUMN TBL_SALES.PURCHASE_CODE IS '결제코드';
COMMENT ON COLUMN TBL_SALES.PURCHASE_SORT IS '결제구분';
COMMENT ON COLUMN TBL_SALES.SALES IS '매출내역';
COMMENT ON COLUMN TBL_SALES.PRODUCT IS '상품내역';
COMMENT ON COLUMN TBL_SALES.QUANTITY IS '수량';

-- 결제 상태 변경 이력 테이블 생성
CREATE TABLE TBL_PURCHASE_STATUS_CHANGE(
  PURCHASE_STATUS_CHANGE_NO NUMBER PRIMARY KEY,
  PURCHASE_CODE VARCHAR2(30) REFERENCES TBL_PURCHASE_PRODUCT(PURCHASE_CODE),
  BEFORE_CHANGE_STATUS VARCHAR2(50),
  AFTER_CHANGE_STATUS VARCHAR2(50),
  HAPPENED_DATE DATE NOT NULL
);
COMMENT ON TABLE TBL_PURCHASE_STATUS_CHANGE IS '결제상태변경이력';
COMMENT ON COLUMN TBL_PURCHASE_STATUS_CHANGE.PURCHASE_STATUS_CHANGE_NO IS '결제상태변경이력번호';
COMMENT ON COLUMN TBL_PURCHASE_STATUS_CHANGE.PURCHASE_CODE IS '결제코드';
COMMENT ON COLUMN TBL_PURCHASE_STATUS_CHANGE.BEFORE_CHANGE_STATUS IS '변경전상태';
COMMENT ON COLUMN TBL_PURCHASE_STATUS_CHANGE.AFTER_CHANGE_STATUS IS '변경후상태';
COMMENT ON COLUMN TBL_PURCHASE_STATUS_CHANGE.HAPPENED_DATE IS '이력발생일자';

-- 회원별멤버쉽상품구매이력 테이블 생성
CREATE TABLE TBL_PURCHASE_MEMBERSHIP(
  PURCHASE_RECORD_NO NUMBER PRIMARY KEY,
  MEMBER_NO NUMBER REFERENCES TBL_MEMBER(MEMBER_NO),
  PRODUCT_CODE VARCHAR2(30) REFERENCES TBL_MEMBERSHIP_PRODUCT(PRODUCT_CODE),
  PURCHASE_DATE DATE NOT NULL
);
COMMENT ON TABLE TBL_PURCHASE_MEMBERSHIP IS '회원별멤버쉽상품구매이력';
COMMENT ON COLUMN TBL_PURCHASE_MEMBERSHIP.PURCHASE_RECORD_NO IS '구매이력번호';
COMMENT ON COLUMN TBL_PURCHASE_MEMBERSHIP.MEMBER_NO IS '회원번호';
COMMENT ON COLUMN TBL_PURCHASE_MEMBERSHIP.PRODUCT_CODE IS '상품코드';
COMMENT ON COLUMN TBL_PURCHASE_MEMBERSHIP.PURCHASE_DATE IS '구매일자';

-- 환불내역 테이블 생성
CREATE TABLE TBL_REFUND(
  REFUND_NO NUMBER PRIMARY KEY,
  PURCHASE_CODE VARCHAR2(30) REFERENCES TBL_PURCHASE_PRODUCT(PURCHASE_CODE),
  PURCHASE_RECORD_NO NUMBER REFERENCES TBL_PURCHASE_MEMBERSHIP(PURCHASE_RECORD_NO),
  PURCHASE_STATUS_CHANGE_NO REFERENCES TBL_PURCHASE_STATUS_CHANGE(PURCHASE_STATUS_CHANGE_NO),
  REFUND_DATE DATE NOT NULL,
  REFUND_PRICE NUMBER NOT NULL
);
COMMENT ON TABLE TBL_REFUND IS '환불내역';
COMMENT ON COLUMN TBL_REFUND.REFUND_NO IS '환불내역번호';
COMMENT ON COLUMN TBL_REFUND.PURCHASE_CODE IS '결제코드';
COMMENT ON COLUMN TBL_REFUND.PURCHASE_RECORD_NO IS '구매이력번호';
COMMENT ON COLUMN TBL_REFUND.PURCHASE_STATUS_CHANGE_NO IS '결제상태변경이력번호';
COMMENT ON COLUMN TBL_REFUND.REFUND_DATE IS '환불일자';
COMMENT ON COLUMN TBL_REFUND.REFUND_PRICE IS '환불금액';

-- 녹화영상관리내역 테이블 생성
CREATE TABLE TBL_RECORD_VIDEO_MANAGE(
  VIDEO_NO NUMBER PRIMARY KEY,
  TRAINER_NO NUMBER REFERENCES TBL_MEMBER(MEMBER_NO),
  VEDIO_SUBJECT VARCHAR2(100) NOT NULL,
  VEDIO_ENROLL_DATE DATE NOT NULL,
  VEDIO_EXPIRY_DATE DATE,
  HITS NUMBER DEFAULT 0 NOT NULL
);
COMMENT ON TABLE TBL_RECORD_VIDEO_MANAGE IS '녹화영상관리내역';
COMMENT ON COLUMN TBL_RECORD_VIDEO_MANAGE.TRAINER_NO IS '트레이너번호';
COMMENT ON COLUMN TBL_RECORD_VIDEO_MANAGE.VEDIO_SUBJECT IS '영상제목';
COMMENT ON COLUMN TBL_RECORD_VIDEO_MANAGE.VEDIO_ENROLL_DATE IS '영상등록일자';
COMMENT ON COLUMN TBL_RECORD_VIDEO_MANAGE.VEDIO_EXPIRY_DATE IS '영상만료일자';
COMMENT ON COLUMN TBL_RECORD_VIDEO_MANAGE.HITS IS '조회수';

-- 녹화영상 첨부파일 테이블
CREATE TABLE TBL_VIDEO_ATTACHMENT(
  VIDEO_ATTACHMENT_NO NUMBER PRIMARY KEY,
  REF_VIDEO_NO NUMBER REFERENCES TBL_RECORD_VIDEO_MANAGE(VIDEO_NO),
  FILE_PATH VARCHAR2(300) NOT NULL,
  ORIGINAL_NAME VARCHAR2(255) NOT NULL,
  FILE_NAME VARCHAR2(80) NOT NULL,
  THUMBNAIL_PATH VARCHAR2(255),
  UPLOAD_DATE DATE NOT NULL,
  ATTACHMENT_STATUS VARCHAR2(2) DEFAULT 'Y' NOT NULL CHECK(ATTACHMENT_STATUS IN ('Y', 'N'))
);
COMMENT ON TABLE TBL_VIDEO_ATTACHMENT IS '녹화영상첨부파일';
COMMENT ON COLUMN TBL_VIDEO_ATTACHMENT.VIDEO_ATTACHMENT_NO IS '첨부파일번호';
COMMENT ON COLUMN TBL_VIDEO_ATTACHMENT.REF_VIDEO_NO IS '영상번호';
COMMENT ON COLUMN TBL_VIDEO_ATTACHMENT.FILE_PATH IS '파일경로';
COMMENT ON COLUMN TBL_VIDEO_ATTACHMENT.ORIGINAL_NAME IS '첨부파일명';
COMMENT ON COLUMN TBL_VIDEO_ATTACHMENT.FILE_NAME IS '변환된이름';
COMMENT ON COLUMN TBL_VIDEO_ATTACHMENT.UPLOAD_DATE IS '업로드일시';
COMMENT ON COLUMN TBL_VIDEO_ATTACHMENT.THUMBNAIL_PATH IS '썸네일경로';
COMMENT ON COLUMN TBL_VIDEO_ATTACHMENT.ATTACHMENT_STATUS IS '상태';

-- 시청기록 테이블 생성
CREATE TABLE TBL_WATCH_VIDEO_RECORD(
  MEMBER_NO NUMBER PRIMARY KEY REFERENCES TBL_MEMBER(MEMBER_NO),
  VIDEO_NO NUMBER REFERENCES TBL_RECORD_VIDEO_MANAGE(VIDEO_NO),
  WATCH_DATE DATE NOT NULL,
  WATCH_TIME VARCHAR2(50) NOT NULL  
);
COMMENT ON TABLE TBL_WATCH_VIDEO_RECORD IS '시청기록';
COMMENT ON COLUMN TBL_WATCH_VIDEO_RECORD.MEMBER_NO IS '회원번호';
COMMENT ON COLUMN TBL_WATCH_VIDEO_RECORD.VIDEO_NO IS '영상번호';
COMMENT ON COLUMN TBL_WATCH_VIDEO_RECORD.WATCH_DATE IS '시청일자';
COMMENT ON COLUMN TBL_WATCH_VIDEO_RECORD.WATCH_TIME IS '시청시간';

-- 녹화영상정산내역 테이블 생성
CREATE TABLE TBL_RECORD_VIDEO_RECEIPT(
  RECORD_VIDEO_RECEIPT_NO NUMBER PRIMARY KEY,
  VIDEO_NO NUMBER REFERENCES TBL_RECORD_VIDEO_MANAGE(VIDEO_NO),
  TOTAL_PRICE_PER_VIDEO NUMBER
);
COMMENT ON TABLE TBL_RECORD_VIDEO_RECEIPT IS '녹화영상정산내역';
COMMENT ON COLUMN TBL_RECORD_VIDEO_RECEIPT.RECORD_VIDEO_RECEIPT_NO IS '녹화영상정산번호';
COMMENT ON COLUMN TBL_RECORD_VIDEO_RECEIPT.VIDEO_NO IS '영상번호';
COMMENT ON COLUMN TBL_RECORD_VIDEO_RECEIPT.TOTAL_PRICE_PER_VIDEO IS '영상별총금액';

-- 실시간수업정산내역 테이블 생성
CREATE TABLE TBL_REALTIME_CLASS_RECEIPT(
  REALTIME_CLASS_RECEIPT_NO NUMBER PRIMARY KEY,
  RGC_MANAGE_NO NUMBER REFERENCES TBL_REALTIME_GROUP_CLASS(RGC_MANAGE_NO),
  TOTAL_PRICE_PER_EDITION NUMBER
);
COMMENT ON TABLE TBL_REALTIME_CLASS_RECEIPT IS '실시간수업정산내역';
COMMENT ON COLUMN TBL_REALTIME_CLASS_RECEIPT.REALTIME_CLASS_RECEIPT_NO IS '실시간수업정산번호';
COMMENT ON COLUMN TBL_REALTIME_CLASS_RECEIPT.RGC_MANAGE_NO IS '관리번호';
COMMENT ON COLUMN TBL_REALTIME_CLASS_RECEIPT.TOTAL_PRICE_PER_EDITION IS '회차별총금액';

-- 정산내역 테이블 생성
CREATE TABLE TBL_RECEIPT(
  RECEIPT_NO NUMBER PRIMARY KEY,
  TRAINER_NO NUMBER REFERENCES TBL_MEMBER(MEMBER_NO),
  RECEIPT_YEAR VARCHAR2(4) NOT NULL,
  RECEIPT_MONTH VARCHAR2(2) NOT NULL,
  RECEIPT_DAY VARCHAR2(2) NOT NULL,
  RECEIPT_TAX NUMBER NOT NULL,
  TOTAL_VIDEO_PRICE NUMBER,
  TOTAL_EDITION_PRICE NUMBER
);
COMMENT ON TABLE TBL_RECEIPT IS '정산내역';
COMMENT ON COLUMN TBL_RECEIPT.RECEIPT_NO IS '정산내역번호';
COMMENT ON COLUMN TBL_RECEIPT.TRAINER_NO IS '트레이너번호';
COMMENT ON COLUMN TBL_RECEIPT.RECEIPT_YEAR IS '년';
COMMENT ON COLUMN TBL_RECEIPT.RECEIPT_MONTH IS '월';
COMMENT ON COLUMN TBL_RECEIPT.RECEIPT_DAY IS '일';
COMMENT ON COLUMN TBL_RECEIPT.RECEIPT_TAX IS '원청징수세금';
COMMENT ON COLUMN TBL_RECEIPT.TOTAL_VIDEO_PRICE IS '녹화영상정산금액';
COMMENT ON COLUMN TBL_RECEIPT.TOTAL_EDITION_PRICE IS '실시간수업정산금액';

-- 지급내역 테이블 생성
CREATE TABLE TBL_PAYMENT(
  PAYMENT_NO NUMBER PRIMARY KEY,
  RECEIPT_NO NUMBER REFERENCES TBL_RECEIPT(RECEIPT_NO),
  PAYMENT_YEAR VARCHAR2(4) NOT NULL,
  PAYMENT_MONTH VARCHAR2(2) NOT NULL,
  PAYMENT_DAY VARCHAR2(2) NOT NULL,
  PAYMENT_PRICE NUMBER NOT NULL
);
COMMENT ON TABLE TBL_PAYMENT IS '지급내역';
COMMENT ON COLUMN TBL_PAYMENT.PAYMENT_NO IS '지급내역번호';
COMMENT ON COLUMN TBL_PAYMENT.RECEIPT_NO IS '정산내역번호';
COMMENT ON COLUMN TBL_PAYMENT.PAYMENT_YEAR IS '년';
COMMENT ON COLUMN TBL_PAYMENT.PAYMENT_MONTH IS '월';
COMMENT ON COLUMN TBL_PAYMENT.PAYMENT_DAY IS '일';
COMMENT ON COLUMN TBL_PAYMENT.PAYMENT_PRICE IS '금액';

-- 통계테이블 생성
CREATE TABLE TBL_STATISTICS(
  STATISTICS_YEAR VARCHAR2(4) NOT NULL,
  STATISTICS_MONTH VARCHAR2(2) NOT NULL,
  STATISTICS_DAY VARCHAR2(2) NOT NULL,
  TOTAL_SALES NUMBER NOT NULL,
  NET_PROFIT NUMBER NOT NULL,
  EXPENSE NUMBER NOT NULL
);
COMMENT ON TABLE TBL_STATISTICS IS '통계';
COMMENT ON COLUMN TBL_STATISTICS.STATISTICS_YEAR IS '년도';
COMMENT ON COLUMN TBL_STATISTICS.STATISTICS_MONTH IS '월';
COMMENT ON COLUMN TBL_STATISTICS.STATISTICS_DAY IS '일';
COMMENT ON COLUMN TBL_STATISTICS.TOTAL_SALES IS '총매출';
COMMENT ON COLUMN TBL_STATISTICS.NET_PROFIT IS '순이익';
COMMENT ON COLUMN TBL_STATISTICS.EXPENSE IS '지출';

-- 자주묻는 질문 테이블 생성

